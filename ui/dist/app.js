!function(I){var g={};function Q(C){if(g[C])return g[C].exports;var n=g[C]={i:C,l:!1,exports:{}};return I[C].call(n.exports,n,n.exports,Q),n.l=!0,n.exports}Q.m=I,Q.c=g,Q.d=function(I,g,C){Q.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:C})},Q.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},Q.t=function(I,g){if(1&g&&(I=Q(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var C=Object.create(null);if(Q.r(C),Object.defineProperty(C,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var n in I)Q.d(C,n,function(g){return I[g]}.bind(null,n));return C},Q.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return Q.d(g,"a",g),g},Q.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},Q.p="",Q(Q.s=7)}([function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(3);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsbUJBQU8sQ0FBQyxDQUFELENBQXhCIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,exports){eval('function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzP2M5NzMiXSwibmFtZXMiOlsiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwicmVzb2x2ZSIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93Iiwia2V5IiwiYXJnIiwiaW5mbyIsInZhbHVlIiwiZXJyb3IiLCJkb25lIiwiUHJvbWlzZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsImFyZ3MiLCJhcmd1bWVudHMiLCJhcHBseSIsImVyciIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLGtCQUFULENBQTRCQyxHQUE1QixFQUFpQ0MsT0FBakMsRUFBMENDLE1BQTFDLEVBQWtEQyxLQUFsRCxFQUF5REMsTUFBekQsRUFBaUVDLEdBQWpFLEVBQXNFQyxHQUF0RSxFQUEyRTtBQUN6RSxNQUFJO0FBQ0YsUUFBSUMsSUFBSSxHQUFHUCxHQUFHLENBQUNLLEdBQUQsQ0FBSCxDQUFTQyxHQUFULENBQVg7QUFDQSxRQUFJRSxLQUFLLEdBQUdELElBQUksQ0FBQ0MsS0FBakI7QUFDRCxHQUhELENBR0UsT0FBT0MsS0FBUCxFQUFjO0FBQ2RQLFVBQU0sQ0FBQ08sS0FBRCxDQUFOO0FBQ0E7QUFDRDs7QUFFRCxNQUFJRixJQUFJLENBQUNHLElBQVQsRUFBZTtBQUNiVCxXQUFPLENBQUNPLEtBQUQsQ0FBUDtBQUNELEdBRkQsTUFFTztBQUNMRyxXQUFPLENBQUNWLE9BQVIsQ0FBZ0JPLEtBQWhCLEVBQXVCSSxJQUF2QixDQUE0QlQsS0FBNUIsRUFBbUNDLE1BQW5DO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTUyxpQkFBVCxDQUEyQkMsRUFBM0IsRUFBK0I7QUFDN0IsU0FBTyxZQUFZO0FBQ2pCLFFBQUlDLElBQUksR0FBRyxJQUFYO0FBQUEsUUFDSUMsSUFBSSxHQUFHQyxTQURYO0FBRUEsV0FBTyxJQUFJTixPQUFKLENBQVksVUFBVVYsT0FBVixFQUFtQkMsTUFBbkIsRUFBMkI7QUFDNUMsVUFBSUYsR0FBRyxHQUFHYyxFQUFFLENBQUNJLEtBQUgsQ0FBU0gsSUFBVCxFQUFlQyxJQUFmLENBQVY7O0FBRUEsZUFBU2IsS0FBVCxDQUFlSyxLQUFmLEVBQXNCO0FBQ3BCVCwwQkFBa0IsQ0FBQ0MsR0FBRCxFQUFNQyxPQUFOLEVBQWVDLE1BQWYsRUFBdUJDLEtBQXZCLEVBQThCQyxNQUE5QixFQUFzQyxNQUF0QyxFQUE4Q0ksS0FBOUMsQ0FBbEI7QUFDRDs7QUFFRCxlQUFTSixNQUFULENBQWdCZSxHQUFoQixFQUFxQjtBQUNuQnBCLDBCQUFrQixDQUFDQyxHQUFELEVBQU1DLE9BQU4sRUFBZUMsTUFBZixFQUF1QkMsS0FBdkIsRUFBOEJDLE1BQTlCLEVBQXNDLE9BQXRDLEVBQStDZSxHQUEvQyxDQUFsQjtBQUNEOztBQUVEaEIsV0FBSyxDQUFDaUIsU0FBRCxDQUFMO0FBQ0QsS0FaTSxDQUFQO0FBYUQsR0FoQkQ7QUFpQkQ7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlQsaUJBQWpCIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gIHRyeSB7XG4gICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICBhcmdzID0gYXJndW1lbnRzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG5cbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gX3Rocm93KGVycikge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwidGhyb3dcIiwgZXJyKTtcbiAgICAgIH1cblxuICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICB9KTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvcjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){eval("var defineProperty = __webpack_require__(6);\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RTcHJlYWQuanM/MzE1NiJdLCJuYW1lcyI6WyJkZWZpbmVQcm9wZXJ0eSIsInJlcXVpcmUiLCJfb2JqZWN0U3ByZWFkIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsIm93bktleXMiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiY29uY2F0IiwiZmlsdGVyIiwic3ltIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImZvckVhY2giLCJrZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxjQUFjLEdBQUdDLG1CQUFPLENBQUMsQ0FBRCxDQUE1Qjs7QUFFQSxTQUFTQyxhQUFULENBQXVCQyxNQUF2QixFQUErQjtBQUM3QixPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdDLFNBQVMsQ0FBQ0MsTUFBOUIsRUFBc0NGLENBQUMsRUFBdkMsRUFBMkM7QUFDekMsUUFBSUcsTUFBTSxHQUFHRixTQUFTLENBQUNELENBQUQsQ0FBVCxJQUFnQixJQUFoQixHQUF1QkMsU0FBUyxDQUFDRCxDQUFELENBQWhDLEdBQXNDLEVBQW5EO0FBQ0EsUUFBSUksT0FBTyxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWUgsTUFBWixDQUFkOztBQUVBLFFBQUksT0FBT0UsTUFBTSxDQUFDRSxxQkFBZCxLQUF3QyxVQUE1QyxFQUF3RDtBQUN0REgsYUFBTyxHQUFHQSxPQUFPLENBQUNJLE1BQVIsQ0FBZUgsTUFBTSxDQUFDRSxxQkFBUCxDQUE2QkosTUFBN0IsRUFBcUNNLE1BQXJDLENBQTRDLFVBQVVDLEdBQVYsRUFBZTtBQUNsRixlQUFPTCxNQUFNLENBQUNNLHdCQUFQLENBQWdDUixNQUFoQyxFQUF3Q08sR0FBeEMsRUFBNkNFLFVBQXBEO0FBQ0QsT0FGd0IsQ0FBZixDQUFWO0FBR0Q7O0FBRURSLFdBQU8sQ0FBQ1MsT0FBUixDQUFnQixVQUFVQyxHQUFWLEVBQWU7QUFDN0JsQixvQkFBYyxDQUFDRyxNQUFELEVBQVNlLEdBQVQsRUFBY1gsTUFBTSxDQUFDVyxHQUFELENBQXBCLENBQWQ7QUFDRCxLQUZEO0FBR0Q7O0FBRUQsU0FBT2YsTUFBUDtBQUNEOztBQUVEZ0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbEIsYUFBakIiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoXCIuL2RlZmluZVByb3BlcnR5XCIpO1xuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9O1xuICAgIHZhciBvd25LZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcblxuICAgIGlmICh0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgb3duS2V5cyA9IG93bktleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKS5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIHN5bSkuZW51bWVyYWJsZTtcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBvd25LZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX29iamVjdFNwcmVhZDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){eval('function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" && self;\n}() || Function("return this")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = __webpack_require__(4);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS1tb2R1bGUuanM/YWIyNCJdLCJuYW1lcyI6WyJnIiwic2VsZiIsIkZ1bmN0aW9uIiwiaGFkUnVudGltZSIsInJlZ2VuZXJhdG9yUnVudGltZSIsIk9iamVjdCIsImdldE93blByb3BlcnR5TmFtZXMiLCJpbmRleE9mIiwib2xkUnVudGltZSIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwiZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0E7QUFDQTtBQUNBLElBQUlBLENBQUMsR0FBSSxZQUFXO0FBQ2xCLFNBQU8sUUFBUyxRQUFPQyxJQUFQLHlDQUFPQSxJQUFQLE9BQWdCLFFBQWhCLElBQTRCQSxJQUE1QztBQUNELENBRk8sTUFFQUMsUUFBUSxDQUFDLGFBQUQsQ0FBUixFQUZSLEMsQ0FJQTtBQUNBOzs7QUFDQSxJQUFJQyxVQUFVLEdBQUdILENBQUMsQ0FBQ0ksa0JBQUYsSUFDZkMsTUFBTSxDQUFDQyxtQkFBUCxDQUEyQk4sQ0FBM0IsRUFBOEJPLE9BQTlCLENBQXNDLG9CQUF0QyxLQUErRCxDQURqRSxDLENBR0E7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHTCxVQUFVLElBQUlILENBQUMsQ0FBQ0ksa0JBQWpDLEMsQ0FFQTs7QUFDQUosQ0FBQyxDQUFDSSxrQkFBRixHQUF1QkssU0FBdkI7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCQyxtQkFBTyxDQUFDLENBQUQsQ0FBeEI7O0FBRUEsSUFBSVQsVUFBSixFQUFnQjtBQUNkO0FBQ0FILEdBQUMsQ0FBQ0ksa0JBQUYsR0FBdUJJLFVBQXZCO0FBQ0QsQ0FIRCxNQUdPO0FBQ0w7QUFDQSxNQUFJO0FBQ0YsV0FBT1IsQ0FBQyxDQUFDSSxrQkFBVDtBQUNELEdBRkQsQ0FFRSxPQUFNUyxDQUFOLEVBQVM7QUFDVGIsS0FBQyxDQUFDSSxrQkFBRixHQUF1QkssU0FBdkI7QUFDRDtBQUNGIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vIFRoaXMgbWV0aG9kIG9mIG9idGFpbmluZyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdCBuZWVkcyB0byBiZVxuLy8ga2VwdCBpZGVudGljYWwgdG8gdGhlIHdheSBpdCBpcyBvYnRhaW5lZCBpbiBydW50aW1lLmpzXG52YXIgZyA9IChmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMgfHwgKHR5cGVvZiBzZWxmID09PSBcIm9iamVjdFwiICYmIHNlbGYpO1xufSkoKSB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG5cbi8vIFVzZSBgZ2V0T3duUHJvcGVydHlOYW1lc2AgYmVjYXVzZSBub3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgY2FsbGluZ1xuLy8gYGhhc093blByb3BlcnR5YCBvbiB0aGUgZ2xvYmFsIGBzZWxmYCBvYmplY3QgaW4gYSB3b3JrZXIuIFNlZSAjMTgzLlxudmFyIGhhZFJ1bnRpbWUgPSBnLnJlZ2VuZXJhdG9yUnVudGltZSAmJlxuICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhnKS5pbmRleE9mKFwicmVnZW5lcmF0b3JSdW50aW1lXCIpID49IDA7XG5cbi8vIFNhdmUgdGhlIG9sZCByZWdlbmVyYXRvclJ1bnRpbWUgaW4gY2FzZSBpdCBuZWVkcyB0byBiZSByZXN0b3JlZCBsYXRlci5cbnZhciBvbGRSdW50aW1lID0gaGFkUnVudGltZSAmJiBnLnJlZ2VuZXJhdG9yUnVudGltZTtcblxuLy8gRm9yY2UgcmVldmFsdXRhdGlvbiBvZiBydW50aW1lLmpzLlxuZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vcnVudGltZVwiKTtcblxuaWYgKGhhZFJ1bnRpbWUpIHtcbiAgLy8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgcnVudGltZS5cbiAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBvbGRSdW50aW1lO1xufSBlbHNlIHtcbiAgLy8gUmVtb3ZlIHRoZSBnbG9iYWwgcHJvcGVydHkgYWRkZWQgYnkgcnVudGltZS5qcy5cbiAgdHJ5IHtcbiAgICBkZWxldGUgZy5yZWdlbmVyYXRvclJ1bnRpbWU7XG4gIH0gY2F0Y2goZSkge1xuICAgIGcucmVnZW5lcmF0b3JSdW50aW1lID0gdW5kZWZpbmVkO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  "use strict";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === "function" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || "@@iterator";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";\n  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n  var inModule = ( false ? undefined : _typeof(module)) === "object";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we\'re in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don\'t bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we\'re in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there\'s no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don\'t have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: "normal",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: "throw",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = "suspendedStart";\n  var GenStateSuspendedYield = "suspendedYield";\n  var GenStateExecuting = "executing";\n  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don\'t natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === "function" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = "GeneratorFunction";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, "__await")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === "throw") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && _typeof(value) === "object" && hasOwn.call(value, "__await")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke("next", value, resolve, reject);\n          }, function (err) {\n            invoke("throw", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke("throw", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error("Generator is already running");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === "throw") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === "next") {\n          // Setting context._sent for legacy support of Babel\'s\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === "throw") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === "return") {\n          context.abrupt("return", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === "normal") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === "throw") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = "throw";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === "throw") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = "return";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === "throw") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // "return" to "throw", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = "throw";\n        context.arg = new TypeError("The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === "throw") {\n      context.method = "throw";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = "throw";\n      context.arg = new TypeError("iterator result is not an object");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was "next", forget context.arg since it has been\n      // "consumed" by the delegate iterator. If context.method was\n      // "return", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== "return") {\n        context.method = "next";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = "Generator"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers\' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn\'t happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return "[object Generator]";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: "root"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === "function") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel\'s\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = "next";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === "throw") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = "throw";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = "next";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === "root") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle("end");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc");\n          var hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error("try statement without catch or finally");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = "next";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === "throw") {\n        throw record.arg;\n      }\n\n      if (record.type === "break" || record.type === "continue") {\n        this.next = record.arg;\n      } else if (record.type === "return") {\n        this.rval = this.arg = record.arg;\n        this.method = "return";\n        this.next = "end";\n      } else if (record.type === "normal" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    "catch": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === "throw") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === "next") {\n        // Deliberately forget the last sent value so that we don\'t\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we\'re in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" && self;\n}() || Function("return this")());\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(5)(module)))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n')},function(module,exports){eval('module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, "loaded", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, "id", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIndlYnBhY2tQb2x5ZmlsbCIsImRlcHJlY2F0ZSIsInBhdGhzIiwiY2hpbGRyZW4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJsIiwiaSJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFTRCxNQUFULEVBQWlCO0FBQ2pDLE1BQUksQ0FBQ0EsTUFBTSxDQUFDRSxlQUFaLEVBQTZCO0FBQzVCRixVQUFNLENBQUNHLFNBQVAsR0FBbUIsWUFBVyxDQUFFLENBQWhDOztBQUNBSCxVQUFNLENBQUNJLEtBQVAsR0FBZSxFQUFmLENBRjRCLENBRzVCOztBQUNBLFFBQUksQ0FBQ0osTUFBTSxDQUFDSyxRQUFaLEVBQXNCTCxNQUFNLENBQUNLLFFBQVAsR0FBa0IsRUFBbEI7QUFDdEJDLFVBQU0sQ0FBQ0MsY0FBUCxDQUFzQlAsTUFBdEIsRUFBOEIsUUFBOUIsRUFBd0M7QUFDdkNRLGdCQUFVLEVBQUUsSUFEMkI7QUFFdkNDLFNBQUcsRUFBRSxlQUFXO0FBQ2YsZUFBT1QsTUFBTSxDQUFDVSxDQUFkO0FBQ0E7QUFKc0MsS0FBeEM7QUFNQUosVUFBTSxDQUFDQyxjQUFQLENBQXNCUCxNQUF0QixFQUE4QixJQUE5QixFQUFvQztBQUNuQ1EsZ0JBQVUsRUFBRSxJQUR1QjtBQUVuQ0MsU0FBRyxFQUFFLGVBQVc7QUFDZixlQUFPVCxNQUFNLENBQUNXLENBQWQ7QUFDQTtBQUprQyxLQUFwQztBQU1BWCxVQUFNLENBQUNFLGVBQVAsR0FBeUIsQ0FBekI7QUFDQTs7QUFDRCxTQUFPRixNQUFQO0FBQ0EsQ0FyQkQiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XHJcblx0aWYgKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcclxuXHR9XHJcblx0cmV0dXJuIG1vZHVsZTtcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},function(module,exports){eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcz85NTIzIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxlQUFULENBQXlCQyxHQUF6QixFQUE4QkMsR0FBOUIsRUFBbUNDLEtBQW5DLEVBQTBDO0FBQ3hDLE1BQUlELEdBQUcsSUFBSUQsR0FBWCxFQUFnQjtBQUNkRyxVQUFNLENBQUNDLGNBQVAsQ0FBc0JKLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQztBQUM5QkMsV0FBSyxFQUFFQSxLQUR1QjtBQUU5QkcsZ0JBQVUsRUFBRSxJQUZrQjtBQUc5QkMsa0JBQVksRUFBRSxJQUhnQjtBQUk5QkMsY0FBUSxFQUFFO0FBSm9CLEtBQWhDO0FBTUQsR0FQRCxNQU9PO0FBQ0xQLE9BQUcsQ0FBQ0MsR0FBRCxDQUFILEdBQVdDLEtBQVg7QUFDRDs7QUFFRCxTQUFPRixHQUFQO0FBQ0Q7O0FBRURRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsZUFBakIiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZpbmVQcm9wZXJ0eTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(0);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(1);\nvar asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);\n\n// CONCATENATED MODULE: ./ui/src/pages/error/Error404Page.js\n\n\nvar Error404 = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt("return", "\\n    <section class=\\"section\\">\\n      <h1> 404 Error </h1>\\n    </section>\\n  ");\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var Error404Page = (Error404);\n// CONCATENATED MODULE: ./ui/src/pages/home/homePageIntro.js\n\n\nvar intro = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt("return", "\\n    <div class=\\"intro-area\\">\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-8 content-center items-center is-column\\">\\n            <h3 class=\\"intro-area__title\\">SendIT</h3>\\n            <p class=\\"intro-area__text\\">\\n              We deliver all size of parcels accros the whole Rwanda and\\n              keep you updated on the location of your parcel.\\n            </p>\\n          </div>\\n          <div class=\\"col-4\\">\\n            <div class=\\"country-map\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  ");\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var homePageIntro = (intro);\n// CONCATENATED MODULE: ./ui/src/pages/home/homePageTestimonies.js\n\n\nvar testimonies = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var view;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              view =\n              /*html*/\n              "\\n        <div class=\\"container items-center\\">\\n          <div class=\\"testimonies-area\\">\\n            <div class=\\"testimonies\\">\\n              <div class=\\"testimony-block\\">\\n                <div class=\\"testimony-content\\">\\n                  <img class=\\"testimony-avatar\\" src=\\"../../images/profile-female.png\\" />\\n                  <h3 class=\\"testimony-content__title\\">First Name Last name 1</h3>\\n                  <div class=\\"testimony-content__text\\">\\n                    <i class=\\"fa fa-quote-left is-white\\"></i>\\n                    <div>\\n                      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam aliquam \\n                      libero exercitationem, temporibus eligendi optio expedita eius suscipit, \\n                      minus, cupiditate animi officia odit ipsam ut nemo cum ducimus error neque?\\n                    </div>\\n                    <i class=\\"fa fa-quote-right is-white\\"></i>\\n                  </div>\\n                  <div class=\\"testimony-stars\\">\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\"testimony-block\\">\\n                <div class=\\"testimony-content\\">\\n                  <img class=\\"testimony-avatar\\" src=\\"../../images/profile-male.png\\" />\\n                  <h3 class=\\"testimony-content__title\\">First Name Last name 2</h3>\\n                  <div class=\\"testimony-content__text\\">\\n                    <i class=\\"fa fa-quote-left is-white\\"></i>\\n                    <div>\\n                      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam aliquam \\n                      libero exercitationem, temporibus eligendi optio expedita eius suscipit, \\n                      minus, cupiditate animi officia odit ipsam ut nemo cum ducimus error neque?\\n                    </div>\\n                    <i class=\\"fa fa-quote-right is-white\\"></i>\\n                  </div>\\n                  <div class=\\"testimony-stars\\">\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\"testimony-block\\">\\n                <div class=\\"testimony-content\\">\\n                  <img class=\\"testimony-avatar\\" src=\\"../../images/profile-female.png\\" />\\n                  <h3 class=\\"testimony-content__title\\">First Name Last name 3</h3>\\n                  <div class=\\"testimony-content__text\\">\\n                    <i class=\\"fa fa-quote-left is-white\\"></i>\\n                    <div>\\n                      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam aliquam \\n                      libero exercitationem, temporibus eligendi optio expedita eius suscipit, \\n                      minus, cupiditate animi officia odit ipsam ut nemo cum ducimus error neque?\\n                    </div>\\n                    <i class=\\"fa fa-quote-right is-white\\"></i>\\n                  </div>\\n                  <div class=\\"testimony-stars\\">\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\"testimony-block\\">\\n                <div class=\\"testimony-content\\">\\n                  <img class=\\"testimony-avatar\\" src=\\"../../images/profile-female.png\\" />\\n                  <h3 class=\\"testimony-content__title\\">First Name Last name 4</h3>\\n                  <div class=\\"testimony-content__text\\">\\n                    <i class=\\"fa fa-quote-left is-white\\"></i>\\n                    <div>\\n                      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam aliquam \\n                      libero exercitationem, temporibus eligendi optio expedita eius suscipit, \\n                      minus, cupiditate animi officia odit ipsam ut nemo cum ducimus error neque?\\n                    </div>\\n                    <i class=\\"fa fa-quote-right is-white\\"></i>\\n                  </div>\\n                  <div class=\\"testimony-stars\\">\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star\\"></i>\\n                    <i class=\\"fa fa-star\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\"testimony-block\\">\\n                <div class=\\"testimony-content\\">\\n                  <img class=\\"testimony-avatar\\" src=\\"../../images/profile-female.png\\" />\\n                  <h3 class=\\"testimony-content__title\\">First Name Last name 5</h3>\\n                  <div class=\\"testimony-content__text\\">\\n                    <i class=\\"fa fa-quote-left is-white\\"></i>\\n                    <div>\\n                      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Totam aliquam \\n                      libero exercitationem, temporibus eligendi optio expedita eius suscipit, \\n                      minus, cupiditate animi officia odit ipsam ut nemo cum ducimus error neque?\\n                    </div>\\n                    <i class=\\"fa fa-quote-right is-white\\"></i>\\n                  </div>\\n                  <div class=\\"testimony-stars\\">\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star active\\"></i>\\n                    <i class=\\"fa fa-star\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      ";\n              return _context.abrupt("return", view);\n\n            case 2:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var homePageTestimonies = (testimonies);\n// CONCATENATED MODULE: ./ui/src/utils/initMap.js\nvar destinationIcon = \'https://chart.googleapis.com/chart?\' + \'chst=d_map_pin_letter&chld=D|FF0000|000000\';\nvar originIcon = \'https://chart.googleapis.com/chart?\' + \'chst=d_map_pin_letter&chld=O|FFFF00|000000\';\nvar kigaliLatLng = {\n  lat: -1.935114,\n  lng: 30.082111\n};\nvar map;\n\nvar initMap = function initMap() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$from = _ref.from,\n      from = _ref$from === void 0 ? {\n    lat: -1.935114,\n    lng: 30.082111\n  } : _ref$from,\n      _ref$to = _ref.to,\n      to = _ref$to === void 0 ? \'\' : _ref$to;\n\n  var mapElement = document.getElementById(\'quote-map\');\n  var bounds;\n\n  try {\n    bounds = new google.maps.LatLngBounds();\n  } catch (err) {\n    console.log(err);\n    document.querySelector(\'.loading\').classList.remove(\'active\');\n  }\n\n  var markersArray = [];\n\n  if (mapElement) {\n    map = new google.maps.Map(mapElement, {\n      center: kigaliLatLng,\n      zoom: 10\n    });\n    var geocoder = new google.maps.Geocoder();\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix({\n      origins: [from],\n      destinations: [to || from],\n      travelMode: \'DRIVING\',\n      unitSystem: google.maps.UnitSystem.METRIC,\n      avoidHighways: false,\n      avoidTolls: false,\n      drivingOptions: {\n        departureTime: new Date(Date.now() + 4 * 3600 * 1000),\n        // Add 4 hours processing time.\n        trafficModel: \'optimistic\'\n      }\n    }, function (response, status) {\n      if (status !== \'OK\') {\n        alert(\'Error was: \' + status);\n      } else {\n        var originList = response.originAddresses;\n        var destinationList = response.destinationAddresses;\n        var outputDiv = document.getElementById(\'output\');\n\n        if (outputDiv) {\n          outputDiv.innerHTML = \'<strong>Journey: </strong>\';\n        }\n\n        deleteMarkers(markersArray);\n\n        var showGeocodedAddressOnMap = function showGeocodedAddressOnMap(asDestination) {\n          var icon = asDestination ? destinationIcon : originIcon;\n          return function (results, status) {\n            if (status === \'OK\') {\n              map.fitBounds(bounds.extend(results[0].geometry.location));\n              markersArray.push(new google.maps.Marker({\n                map: map,\n                position: results[0].geometry.location,\n                icon: icon\n              }));\n            } else {\n              console.log(\'Geocode was not successful due to: \' + status);\n            }\n          };\n        };\n\n        for (var i = 0; i < originList.length; i++) {\n          var results = response.rows[i].elements;\n          geocoder.geocode({\n            \'address\': originList[i]\n          }, showGeocodedAddressOnMap(false));\n\n          for (var j = 0; j < results.length; j++) {\n            geocoder.geocode({\n              \'address\': destinationList[j]\n            }, showGeocodedAddressOnMap(true));\n\n            if (outputDiv) {\n              // Processing time set to 4 hours\n              var processTime = 4 * 60 * 60; // Set duration from google map to 0 in case location not found\n\n              var distanceDuration = results[j] && results[j].status === \'OK\' ? results[j].duration.value : 0; // Get duration from moment.js\n\n              var duration = moment.duration(distanceDuration + processTime, \'seconds\');\n              var distance = results[j] ? results[j].distance || \'\' : \'\';\n              outputDiv.innerHTML += "\\n                ".concat(originList[i], " to ").concat(destinationList[j], ": \\n                ").concat(distance.text || \'\', " \\n                in ").concat(duration.humanize(), " <br>\\n              ");\n            }\n          }\n        }\n      }\n    });\n  }\n}; // Remove all markers from the map\n\n\nfunction deleteMarkers(markersArray) {\n  for (var i = 0; i < markersArray.length; i++) {\n    markersArray[i].setMap(null);\n  }\n\n  markersArray = [];\n}\n\nwindow.initMap = initMap;\n/* harmony default export */ var utils_initMap = (initMap);\n// CONCATENATED MODULE: ./ui/src/components/googleMap.js\n\n\n\nvar googleMap_map = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt("return", "\\n    <div id=\\"quote-map\\" class=\\"map-location\\"> Map location</div>\\n    <div id=\\"output\\" class=\\"map-output\\"><strong>Journey: </strong></div>\\n   ");\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2(from, to) {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              utils_initMap({\n                from: from,\n                to: to\n              });\n\n            case 1:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render(_x, _x2) {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var googleMap = (googleMap_map);\n// CONCATENATED MODULE: ./ui/src/mocks/index.js\nvar provinces = {\n  eastern: {\n    name: \'eastern province\',\n    districts: {\n      \'bugesera\': {\n        name: \'Bugesera\'\n      },\n      \'Gatsibo\': {\n        name: \'Gatsibo\'\n      },\n      \'kayonza\': {\n        name: \'Kayonza\'\n      },\n      \'Kirehe\': {\n        name: \'Kirehe\'\n      },\n      \'ngoma\': {\n        name: \'Ngoma\'\n      },\n      \'nyagatare\': {\n        name: \'Nyagatare\'\n      },\n      \'rwamagana\': {\n        name: \'Rwamagana\'\n      }\n    }\n  },\n  kigali: {\n    name: \'kigali province\',\n    districts: {\n      \'gasabo\': {\n        name: \'Gasabo\'\n      },\n      \'Kicukiro\': {\n        name: \'Kicukiro\'\n      },\n      \'nyarugenge\': {\n        name: \'Nyarugenge\'\n      }\n    }\n  },\n  northern: {\n    name: \'Northern province\',\n    districts: {\n      \'burera\': {\n        name: \'Burera\'\n      },\n      \'gakenke\': {\n        name: \'Gakenke\'\n      },\n      \'gicumbi\': {\n        name: \'Gicumbi\'\n      },\n      \'musanze\': {\n        name: \'Musanze\'\n      },\n      \'rulindo\': {\n        name: \'Rulindo\'\n      }\n    }\n  },\n  southern: {\n    name: \'southern province\',\n    districts: {\n      \'gisagara\': {\n        name: \'Gisagara\'\n      },\n      \'huye\': {\n        name: \'Huye\'\n      },\n      \'kamonyi\': {\n        name: \'Kamonyi\'\n      },\n      \'muhanga\': {\n        name: \'Muhanga\'\n      },\n      \'nyamagabe\': {\n        name: \'Nyamagabe\'\n      },\n      \'nyanza\': {\n        name: \'Nyanza\'\n      },\n      \'nyaruguru\': {\n        name: \'Nyaruguru\'\n      },\n      \'ruhango\': {\n        name: \'Ruhango\'\n      }\n    }\n  },\n  western: {\n    name: \'western province\',\n    districts: {\n      \'karongi\': {\n        name: \'Karongi\'\n      },\n      \'ngororero\': {\n        name: \'Ngororero\'\n      },\n      \'nyabihu\': {\n        name: \'Nyabihu\'\n      },\n      \'nyamasheke\': {\n        name: \'Nyamasheke\'\n      },\n      \'rubavu\': {\n        name: \'Rubavu\'\n      },\n      \'rusizi\': {\n        name: \'Rusizi\'\n      },\n      \'rutsiro\': {\n        name: \'Rutsiro\'\n      }\n    }\n  }\n};\n\n// CONCATENATED MODULE: ./ui/src/utils/getPrice.js\nvar getPrice = function getPrice() {\n  var weight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var pricePerKg;\n\n  if (weight <= 50) {\n    pricePerKg = 1000;\n  } else if (weight > 50 && weight <= 100) {\n    pricePerKg = 900;\n  } else if (weight > 100) {\n    pricePerKg = 800;\n  }\n\n  return parseFloat(weight) * pricePerKg;\n};\n\n/* harmony default export */ var utils_getPrice = (getPrice);\n// CONCATENATED MODULE: ./ui/src/utils/store.js\nvar store_token = localStorage.getItem(\'token\') || \'\';\nvar store_user = localStorage.getItem(\'user\');\nvar store_data = {\n  auth: store_token !== \'\',\n  token: store_token,\n  user: store_user ? JSON.parse(store_user) : \'\',\n  parcels: {\n    data: [],\n    page: 1,\n    total: 0\n  },\n  updateUser: function updateUser(user) {\n    if (user) {\n      localStorage.setItem(\'user\', JSON.stringify(user));\n      this.user = user;\n    }\n  },\n  logout: function logout() {\n    localStorage.setItem(\'token\', \'\');\n    localStorage.setItem(\'user\', \'\');\n    this.auth = false;\n    this.token = null;\n    this.user = \'\';\n    this.parcels = [];\n    return true;\n  }\n};\n/* harmony default export */ var store = (store_data);\n// CONCATENATED MODULE: ./ui/src/components/getQuote.js\n\n\n\n\n\n\nvar getQuote_form = {\n  from_province: \'\',\n  from_district: \'\',\n  to_province: \'\',\n  to_district: \'\',\n  weight: \'\',\n  price: \'\'\n};\nvar Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = "\\n    <div class=\\"container\\">\\n    ";\n              _context.next = 3;\n              return googleMap.render();\n\n            case 3:\n              _context.t1 = _context.sent;\n              _context.t2 = store.auth ? \'<button id="submit-order" disabled class="btn bg-green">Make order</button>\' : \'<button id="submit-order" disabled class="btn bg-green">Login</button>\';\n              return _context.abrupt("return", _context.t0.concat.call(_context.t0, _context.t1, "\\n    <div class=\\"box quote-container\\">\\n      <div class=\\"quote-result\\">\\n        <p class=\\"p-10\\">From <strong>-</strong> to <strong>-</strong>, a parcel of \\n          <strong>-</strong> costs <strong>-</strong>\\n        </p>\\n      </div>\\n      <p class=\\"quote-error\\">\\n      </p>\\n      <form action=\\"#\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-4\\">\\n            <h3 class=\\"title is-white\\">From</h3>\\n\\n            <label for=\\"fromProvince\\">Province</label>\\n            <span class=\\"custom-dropdown\\">\\n              <select id=\\"from_province\\" name=\\"fromProvince\\">\\n                <option value=\\"\\">Select</option> \\n                <option value=\\"eastern\\">Eastern Province</option>\\n                <option value=\\"kigali\\">Kigali</option>  \\n                <option value=\\"northern\\">Northen Province</option>\\n                <option value=\\"southern\\">Southern Province</option>\\n              </select>\\n            </span>\\n            \\n            <label for=\\"from_district\\">District</label>\\n            <span class=\\"custom-dropdown\\">\\n              <select id=\\"from_district\\" name=\\"fromDistrict\\">    \\n                <option value=\\"eastern\\">Select</option>\\n              </select>\\n            </span>\\n          </div>\\n          <div class=\\"col-4\\">\\n            <h3 class=\\"title is-white\\">To</h3>\\n            \\n            <label for=\\"toProvince\\">Province</label>\\n            <span class=\\"custom-dropdown\\">\\n              <select id=\\"to_province\\" name=\\"toProvince\\">\\n                <option value=\\"\\">Select</option> \\n                <option value=\\"eastern\\">Eastern Province</option>\\n                <option value=\\"kigali\\">Kigali</option>  \\n                <option value=\\"northern\\">Northen Province</option>\\n                <option value=\\"southern\\">Southern Province</option>\\n              </select>\\n            </span>\\n            \\n            <label for=\\"to_district\\">District</label>\\n            <span class=\\"custom-dropdown\\">\\n              <select id=\\"to_district\\" name=\\"toDistrict\\">    \\n                <option value=\\"eastern\\">Select</option>\\n              </select>\\n            </span>\\n          </div>\\n          <div class=\\"col-4\\">\\n            <label for=\\"from\\" class=\\"title is-white\\">Weight</label>\\n            <input type=\\"number\\" name=\\"weight\\" id=\\"weight\\">\\n            <div class=\\"form-error\\"></div>\\n            <button id=\\"submit-quote\\" class=\\"btn\\">Quote</button>\\n            ").concat(_context.t2, "\\n            \\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n "));\n\n            case 6:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var ids, fromProvince, toProvince, fromDistrict, toDistrict, quoteError, submitQuote, submitOrder, quoteResult, weight, loading, inputHandler, makeOrderHandler, renderDetails, validateInputs, resetInputs;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              resetInputs = function _ref5() {\n                var keys = Object.keys(getQuote_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!getQuote_form[key] && getQuote_form[key] !== 0) {\n                    getQuote_form[key] = \'\';\n                    document.querySelector("#".concat(key)).textContent = \'\'; // document.querySelector(`#form-error`). = \'red\'\n                  }\n                });\n                return hasError;\n              };\n\n              validateInputs = function _ref4() {\n                var keys = Object.keys(getQuote_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!getQuote_form[key] && getQuote_form[key] !== 0) {\n                    var tagElement = document.querySelector(".form-error.".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'Required\';\n                      tagElement.style.color = \'red\';\n                      hasError = true;\n                    }\n                  } // Set all null field to an empty string\n\n\n                  if (getQuote_form[key] === null) {\n                    getQuote_form[key] = \'\';\n                  }\n                });\n                return hasError;\n              };\n\n              renderDetails = function _ref3() {\n                var price = utils_getPrice(getQuote_form.weight) || \'\';\n                getQuote_form.price = price;\n                quoteResult.innerHTML = "\\n    <p>\\n      From <strong class=\\"capitalize\\">".concat(getQuote_form.from_district || \'-\', "</strong> \\n      to <strong class=\\"capitalize\\">").concat(getQuote_form.to_district || \'-\', "</strong>, a parcel of \\n      <strong class=\\"capitalize\\">").concat(getQuote_form.weight || \'-\', " Kg</strong> costs <strong>\\n      ").concat(price ? price.toLocaleString() : \'-\', " RWF</strong>\\n    </p>");\n                makeOrderHandler();\n              };\n\n              makeOrderHandler = function _ref2() {\n                if (getQuote_form.from_province && getQuote_form.from_district && getQuote_form.to_province && getQuote_form.to_district && getQuote_form.weight && store.auth) {\n                  submitOrder.removeAttribute(\'disabled\');\n                } else {\n                  submitOrder.setAttribute(\'disabled\', true);\n                }\n              };\n\n              inputHandler = function _ref(e) {\n                var _e$target = e.target,\n                    value = _e$target.value,\n                    id = _e$target.id;\n\n                if (id === \'receiver_phone\') {\n                  value = value.replace(/\\D+/g, \'\');\n                }\n\n                getQuote_form[id] = value;\n                renderDetails();\n              };\n\n              _context2.next = 7;\n              return googleMap.after_render();\n\n            case 7:\n              ids = {\n                from_province: \'from_district\',\n                to_province: \'to_district\' // Initialise select inputs and errors\n\n              };\n              fromProvince = document.querySelector(\'#from_province\');\n              toProvince = document.querySelector(\'#to_province\');\n              fromDistrict = document.querySelector(\'#from_district\');\n              toDistrict = document.querySelector(\'#to_district\');\n              quoteError = document.querySelector(\'.quote-error\');\n              submitQuote = document.querySelector(\'#submit-quote\');\n              submitOrder = document.querySelector(\'#submit-order\');\n              quoteResult = document.querySelector(\'.quote-result\');\n              weight = document.querySelector(\'#weight\');\n              loading = document.querySelector(\'.loading\');\n              weight.addEventListener(\'input\', inputHandler);\n              fromProvince.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  getQuote_form.from_province = value;\n                  var districts = provinces[value].districts || [];\n                  fromDistrict.options.length = 0; //Reset district option to 0\n\n                  fromDistrict.options[0] = new Option(\'Select District\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    fromDistrict.add(new Option(districts[index].name, index));\n                  }\n\n                  ;\n                }\n              });\n              toProvince.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  getQuote_form.to_province = value;\n                  var districts = provinces[value].districts || [];\n                  toDistrict.options.length = 0; //Reset district option to 0\n\n                  toDistrict.options[0] = new Option(\'Select District\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    toDistrict.add(new Option(districts[index].name, index));\n                  }\n\n                  ;\n                }\n              });\n              fromDistrict.addEventListener(\'change\', function (e) {\n                getQuote_form.from_district = e.target.value;\n                renderDetails();\n              });\n              toDistrict.addEventListener(\'change\', function (e) {\n                getQuote_form.to_district = e.target.value;\n                renderDetails();\n              });\n              submitQuote.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n\n                if (validateInputs()) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                googleMap.after_render(getQuote_form.from_district, getQuote_form.to_district);\n                setTimeout(function () {\n                  loading.classList.remove(\'active\');\n                }, 2000);\n              });\n              submitOrder.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n\n                if (!store.auth) {\n                  location.href = \'/#/login\';\n                  return;\n                }\n\n                loading.classList.add(\'active\');\n                var query = "?from_province=".concat(getQuote_form.from_province);\n                query += "&from_district=".concat(getQuote_form.from_district);\n                query += "&to_province=".concat(getQuote_form.to_province);\n                query += "&to_district=".concat(getQuote_form.to_district);\n                query += "&weight=".concat(getQuote_form.weight);\n                location.href = "/#/create_parcel".concat(query);\n                setTimeout(function () {\n                  loading.classList.remove(\'active\');\n                }, 2000);\n              }); // Callback function to handle email and password imput\n\n            case 25:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var getQuote = (Page);\n// CONCATENATED MODULE: ./ui/src/pages/home/HomePage.js\n\n\n\n\n\nvar HomePage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t2 = "\\n    ";\n              _context.next = 3;\n              return homePageIntro.render();\n\n            case 3:\n              _context.t3 = _context.sent;\n              _context.t1 = _context.t2.concat.call(_context.t2, _context.t3, "\\n    ");\n              _context.next = 7;\n              return getQuote.render();\n\n            case 7:\n              _context.t4 = _context.sent;\n              _context.t0 = _context.t1.concat.call(_context.t1, _context.t4, "\\n    ");\n              _context.next = 11;\n              return homePageTestimonies.render();\n\n            case 11:\n              _context.t5 = _context.sent;\n              return _context.abrupt("return", _context.t0.concat.call(_context.t0, _context.t5, "\\n "));\n\n            case 13:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getQuote.after_render();\n\n            case 2:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var HomePage = (HomePage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/quote/QuotePage.js\n\n\n\nvar QuotePage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = "\\n    ";\n              _context.next = 3;\n              return getQuote.render();\n\n            case 3:\n              _context.t1 = _context.sent;\n              return _context.abrupt("return", _context.t0.concat.call(_context.t0, _context.t1, "\\n "));\n\n            case 5:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getQuote.after_render();\n\n            case 2:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var QuotePage = (QuotePage_Page);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/objectSpread.js\nvar objectSpread = __webpack_require__(2);\nvar objectSpread_default = /*#__PURE__*/__webpack_require__.n(objectSpread);\n\n// CONCATENATED MODULE: ./ui/src/utils/fetchAPI.js\n\n\nvar URL = \'/api/v1\';\nvar _store$token = store.token,\n    fetchAPI_token = _store$token === void 0 ? \'\' : _store$token;\nvar defaultOptions = {\n  method: \'GET\',\n  headers: {\n    \'Content-Type\': \'application/json; charset=utf-8\',\n    \'Accept\': \'application/json\',\n    \'Authorization\': "Bearer ".concat(fetchAPI_token)\n  }\n};\n\nvar fetchAPI_fetchAPI = function fetchAPI(endpoint, config) {\n  var noContentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return new Promise(function (resolve, reject) {\n    var options = objectSpread_default()({}, defaultOptions, config);\n\n    if (noContentType) {\n      delete options.headers[\'Content-Type\'];\n    } // Converts a given json body to string\n\n\n    if (options.body && !noContentType) {\n      options.body = JSON.stringify(options.body);\n    }\n\n    fetch("".concat(URL).concat(endpoint), options).then(function (res) {\n      return res.json() || {};\n    }).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n};\n\n/* harmony default export */ var utils_fetchAPI = (fetchAPI_fetchAPI);\n// CONCATENATED MODULE: ./ui/src/pages/login/LoginPage.js\n\n\n\n\n\nvar LoginPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt("return", "\\n  <div class=\\"container\\">\\n    <div class=\\"row content-center\\">\\n      <div class=\\"col-4\\"><br><br>\\n        <div class=\\"box login-container\\">\\n          <p class=\\"align-center\\">\\n            <img class=\\"brand-title\\" src=\\"./images/logo-blue.png\\" alt=\\"logo\\">\\n          </p>\\n          <div class=\\"form-error error-message\\"></div>\\n          <form action=\\"#\\">\\n            <input\\n              type=\\"text\\"\\n              name=\\"email\\"\\n              id=\\"email\\"\\n              placeholder=\\"Email\\"\\n              required\\n            >\\n            <div class=\\"form-error email\\"></div>\\n\\n            <input\\n              type=\\"password\\"\\n              name=\\"password\\"\\n              id=\\"password\\"\\n              minlength=6\\n              pattern=\\".{6,20}\\"\\n              title=\\"Password should have at least 6 characters\\"\\"\\n              placeholder=\\"Password\\"\\n              required\\n            >\\n            <div class=\\"form-error password\\"></div>\\n\\n            <button id=\\"submit-login\\" type=\\"submit\\" class=\\"btn primary v-wide mt-10\\">Login</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n ");\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var form, testEmail, errorMessage, email, emailError, password, passwordError, submitLogin, loading, inputHandler;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              inputHandler = function _ref(e) {\n                form[e.target.id] = e.target.value;\n              };\n\n              form = {\n                email: \'\',\n                password: \'\'\n              };\n              testEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n              errorMessage = document.querySelector(\'.form-error.error-message\');\n              email = document.querySelector(\'#email\');\n              emailError = document.querySelector(\'.form-error.email\');\n              password = document.querySelector(\'#password\');\n              passwordError = document.querySelector(\'.form-error.password\');\n              submitLogin = document.querySelector(\'#submit-login\');\n              loading = document.querySelector(\'.loading\');\n              email.addEventListener(\'input\', inputHandler);\n              password.addEventListener(\'input\', inputHandler);\n              submitLogin.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n                errorMessage.textContent = \'\'; // Reset form errors to empty string\n\n                emailError.textContent = \'\';\n                passwordError.textContent = \'\';\n                var hasError = false; // Validate email\n\n                if (!form.email) {\n                  emailError.style.color = \'red\';\n                  emailError.textContent = \'Email Required.\';\n                  hasError = true;\n                }\n\n                if (!testEmail.test(form.email)) {\n                  emailError.style.color = \'red\';\n                  emailError.textContent = \'Enter a correct email.\';\n                  hasError = true;\n                } // Validate password\n\n\n                if (!form.password) {\n                  passwordError.style.color = \'red\';\n                  passwordError.textContent = \'Password Required.\';\n                  hasError = true;\n                }\n\n                if (form.password && form.password.length < 6) {\n                  passwordError.style.color = \'red\';\n                  passwordError.textContent = \'Password must have at least 6 characters.\';\n                  hasError = true;\n                }\n\n                if (hasError) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                utils_fetchAPI(\'/auth/login\', {\n                  method: \'post\',\n                  body: form\n                }).then(function (res) {\n                  var success = res.success,\n                      data = res.data,\n                      token = res.token;\n\n                  if (res.message) {\n                    errorMessage.textContent = res.message;\n                  }\n\n                  if (success && token) {\n                    localStorage.setItem(\'token\', token);\n                    localStorage.setItem(\'user\', JSON.stringify(data));\n                    store.auth = true;\n                    store.token = token;\n                    store.user = objectSpread_default()({}, data); // Wait for a second\n\n                    setTimeout(function () {\n                      location.href = \'/\';\n                    }, 1000);\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                  }\n                });\n              }); // Callback function to handle email and password imput\n\n            case 13:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var LoginPage = (LoginPage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/signup/SignupPage.js\n\n\n\n\n\n\nvar SignupPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt("return", "\\n    <div class=\\"container\\">\\n      <div class=\\"row content-center\\">\\n        <div class=\\"col-4\\">\\n          <div class=\\"box signup-container\\">\\n            <p class=\\"align-center\\">\\n              <img class=\\"brand-title\\" src=\\"./images/logo-blue.png\\" alt=\\"logo\\">\\n            </p>\\n            <div class=\\"form-error error-message\\"></div>\\n            <form action=\\"#\\">\\n              <input type=\\"text\\" name=\\"first_name\\" id=\\"first_name\\" placeholder=\\"First Name\\">\\n              <div class=\\"form-error first_name\\"></div>\\n\\n              <input type=\\"text\\" name=\\"last_name\\" id=\\"last_name\\" placeholder=\\"Last Name\\">\\n              <div class=\\"form-error last_name\\"></div>\\n            \\n              <input type=\\"text\\" name=\\"email\\" id=\\"email\\" placeholder=\\"Email\\">\\n              <div class=\\"form-error email\\"></div>\\n\\n              <input type=\\"password\\" name=\\"password\\" id=\\"password\\" placeholder=\\"Password\\">\\n              <div class=\\"form-error password\\"></div>\\n\\n              <span class=\\"custom-dropdown\\">\\n                <select id=\\"gender\\" name=\\"gender\\">\\n                  <option value=\\"\\">Select Gender</option> \\n                  <option value=\\"Male\\">Male</option>\\n                  <option value=\\"Female\\">Female</option>\\n                </select>\\n              </span>\\n              <div class=\\"form-error gender\\"></div>\\n\\n              <span class=\\"custom-dropdown\\">\\n                <select id=\\"province\\" name=\\"province\\">\\n                  <option value=\\"\\">Select Province</option> \\n                  <option value=\\"eastern\\">Eastern Province</option>\\n                  <option value=\\"kigali\\">Kigali</option>  \\n                  <option value=\\"northern\\">Northen Province</option>\\n                  <option value=\\"southern\\">Southern Province</option>\\n                </select>\\n              </span>\\n              <div class=\\"form-error province\\"></div>\\n              \\n              <span class=\\"custom-dropdown\\">\\n                <select id=\\"district\\" name=\\"district\\">    \\n                  <option value=\\"\\">Select District</option>\\n                </select>\\n              </span>\\n              <div class=\\"form-error district\\"></div>\\n\\n              <button id=\\"submit-signup\\" class=\\"btn primary v-wide\\">Signup</button>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  ");\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var form, formKeys, testEmail, firstName, firstNameError, lastName, lastNameError, province, provinceError, district, districtError, gender, genderError, email, emailError, password, passwordError, submitSignup, errorMessage, loading, inputHandler, validateInputs;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              validateInputs = function _ref2() {\n                var keys = Object.keys(form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!form[key] && form[key] !== 0) {\n                    document.querySelector("#".concat(key)).textContent = \'Required\';\n                    console.log(document.querySelector(".form-error.".concat(key)), key);\n                    hasError = true;\n                  }\n                });\n                loading.classList.remove(\'active\');\n                return hasError;\n              };\n\n              inputHandler = function _ref(e) {\n                form[e.target.id] = e.target.value;\n              };\n\n              form = {\n                first_name: \'\',\n                last_name: \'\',\n                province: \'\',\n                district: \'\',\n                email: \'\',\n                password: \'\'\n              };\n              formKeys = Object.keys(form); // List of povinces and districts of Rwanda\n\n              testEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/; // Initialise select inputs\n\n              firstName = document.querySelector(\'#first_name\');\n              firstNameError = document.querySelector(\'.form-error.first_name\');\n              lastName = document.querySelector(\'#last_name\');\n              lastNameError = document.querySelector(\'.form-error.last_name\');\n              province = document.querySelector(\'#province\');\n              provinceError = document.querySelector(\'.form-error.province\');\n              district = document.querySelector(\'#district\');\n              districtError = document.querySelector(\'.form-error.district\');\n              gender = document.querySelector(\'#gender\');\n              genderError = document.querySelector(\'.form-error.gender\');\n              email = document.querySelector(\'#email\');\n              emailError = document.querySelector(\'.form-error.email\');\n              password = document.querySelector(\'#password\');\n              passwordError = document.querySelector(\'.form-error.password\');\n              submitSignup = document.querySelector(\'#submit-signup\');\n              errorMessage = document.querySelector(\'.form-error.error-message\');\n              loading = document.querySelector(\'.loading\');\n              email.addEventListener(\'input\', inputHandler);\n              password.addEventListener(\'input\', inputHandler);\n              firstName.addEventListener(\'input\', inputHandler);\n              lastName.addEventListener(\'input\', inputHandler);\n              province.addEventListener(\'input\', inputHandler);\n              district.addEventListener(\'input\', inputHandler);\n              province.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  form.province = value;\n                  var districts = provinces[value].districts || [];\n                  district.options.length = 0; //Reset district option to 0\n\n                  district.options[0] = new Option(\'Select\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    district.add(new Option(districts[index].name, index));\n                  }\n\n                  ;\n                }\n              });\n              district.addEventListener(\'change\', function (e) {\n                form.district = e.target.value;\n              });\n              gender.addEventListener(\'change\', function (e) {\n                form.gender = e.target.value;\n              });\n              submitSignup.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n                errorMessage.textContent = \'\';\n                var hasError = false; // Reset form errors to empty string\n\n                emailError.textContent = \'\';\n                passwordError.textContent = \'\'; // Validate email\n\n                if (!form.email) {\n                  emailError.style.color = \'red\';\n                  emailError.textContent = \'Email Required.\';\n                  hasError = true;\n                }\n\n                if (!testEmail.test(form.email)) {\n                  emailError.style.color = \'red\';\n                  emailError.textContent = \'Enter a correct email.\';\n                  hasError = true;\n                } // Validate password\n\n\n                if (!form.password) {\n                  passwordError.style.color = \'red\';\n                  passwordError.textContent = \'Password Required.\';\n                  hasError = true;\n                }\n\n                if (form.password && form.password.length < 6) {\n                  passwordError.style.color = \'red\';\n                  passwordError.textContent = \'Password must be at least 6 characters.\';\n                  hasError = true;\n                }\n\n                if (!form.province) {\n                  provinceError.style.color = \'red\';\n                  provinceError.textContent = \'Province Required.\';\n                  hasError = true;\n                }\n\n                if (!form.district) {\n                  districtError.style.color = \'red\';\n                  districtError.textContent = \'District Required.\';\n                  hasError = true;\n                }\n\n                if (!form.first_name) {\n                  firstNameError.style.color = \'red\';\n                  firstNameError.textContent = \'First Name Required.\';\n                  hasError = true;\n                }\n\n                if (!form.last_name) {\n                  lastNameError.style.color = \'red\';\n                  lastNameError.textContent = \'Last Name Required.\';\n                  hasError = true;\n                }\n\n                if (!form.gender) {\n                  genderError.style.color = \'red\';\n                  genderError.textContent = \'Gender Required.\';\n                  hasError = true;\n                }\n\n                if (hasError) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                utils_fetchAPI(\'/auth/signup\', {\n                  method: \'post\',\n                  body: form\n                }).then(function (res) {\n                  var success = res.success,\n                      data = res.data,\n                      token = res.token;\n\n                  if (res.message) {\n                    errorMessage.textContent = res.message;\n                  }\n\n                  if (success && token) {\n                    localStorage.setItem(\'token\', token);\n                    store.updateUser(data);\n                    store.auth = true;\n                    store.token = token;\n                    store.user = objectSpread_default()({}, data); // Wait for a second\n\n                    setTimeout(function () {\n                      location.href = \'/\';\n                    }, 1000);\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                  }\n                });\n              }); // Callback function to handle email and password imput\n\n            case 32:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var SignupPage = (SignupPage_Page);\n// CONCATENATED MODULE: ./ui/src/components/leftSideBar.js\n\n\n\nvar sideBar = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var user, links, view;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = store.user;\n              links = [{\n                link: \'/#/\',\n                text: \'Home\'\n              }, {\n                link: \'/#/quote\',\n                text: \'Get Quote\'\n              }, {\n                link: "/#/profile/".concat(user.id),\n                text: \'My Account\'\n              }, {\n                link: \'/#/my_parcels\',\n                text: \'My Parcels\'\n              }, {\n                link: \'/#/create_parcel\',\n                text: \'Add parcel\'\n              }, {\n                link: \'/#/admin_parcels\',\n                text: \'Parcels\'\n              }];\n              view = "\\n      <div class=\\"box sidebar\\">\\n        <div class=\\"sidebar__header\\">\\n          <div\\n            class=\\"profile-avatar\\"\\n            style=\\"background-image: url(\'".concat(store.user ? store.user.avatar_url || \'/images/profile-female.png\' : \'/images/profile-female.png\', "\'), linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.6))\\"\\n            >\\n            \\n          </div>\\n          <div class=\\"profile-name\\">\\n          ").concat(store.user ? store.user.first_name + \' \' + store.user.last_name : \'My Names\', "\\n          </div>\\n        </div>\\n        <div class=\\"sidebar__content\\">\\n          <ul class=\\"sidebar__nav\\">\\n            ").concat(links.map(function (el) {\n                if (el.auth ? store.auth && (el.users ? el.users.indexOf(user.user_type) !== -1 : true) && !el.hide : !store.auth || !el.hide) {\n                  return "\\n                  <li class=\\"nav-item\\">\\n                    <a href=\\"".concat(el.link, "\\">").concat(el.text, "</a>\\n                  </li>\\n                ");\n                }\n              }).join(\'\\n \'), "\\n          </ul>\\n        </div>\\n      </div>\\n    ");\n              return _context.abrupt("return", view);\n\n            case 4:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var leftSideBar = (sideBar);\n// CONCATENATED MODULE: ./ui/src/utils/model.js\nvar model = document.querySelector(\'#model\');\n\nvar modelWrapper = function modelWrapper() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \'Title\' : _ref$title,\n      _ref$body = _ref.body,\n      body = _ref$body === void 0 ? \'\' : _ref$body,\n      _ref$reload = _ref.reload,\n      reload = _ref$reload === void 0 ? false : _ref$reload;\n\n  model.classList.add(\'show\');\n  model.innerHTML = "\\n    <div class=\\"box\\">\\n      <h3 class=\\"title model-title\\">".concat(title, "</h3>\\n      ").concat(body, "\\n      <button class=\\"btn primary v-wide\\" onclick=\\"closeModel(").concat(reload, ")\\">Ok</button>\\n    </div>\\n  ");\n};\n\nfunction closeModel() {\n  var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  model.classList.remove(\'show\');\n\n  if (reload) {\n    window.location.reload();\n  }\n}\n\nwindow.closeModel = closeModel;\n/* harmony default export */ var utils_model = (modelWrapper);\n// CONCATENATED MODULE: ./ui/src/utils/navigation.js\nvar navigation = {\n  extractRequestURL: function extractRequestURL() {\n    var url = location.hash.slice(1).toLowerCase() || \'/\';\n\n    if (url.length > 2) {\n      url = url.substring(1);\n    }\n\n    var params = url.split(\'/\');\n    return params;\n  },\n  extractQuery: function extractQuery() {\n    var queries = this.extractRequestURL()[this.extractRequestURL().length - 1].match(/\\?.*/g, \'\') || [];\n    var query = (queries.length > 0 ? queries[0] : \'\').substring(1);\n    var params = query.match(/(([a-zA-Z_]+=[a-zA-Z0-9]+&)|([a-zA-Z_]+=[a-zA-Z%0-9]+))/g) || [];\n    var obj = {};\n    params.forEach(function (val) {\n      var key = val.match(/[a-zA-Z_]+=/g)[0];\n      var value = decodeURIComponent(val.match(/=[a-zA-Z%0-9]+/g)[0].replace(/&/g, \'\'));\n\n      if (key) {\n        obj[key.substring(0, key.length - 1)] = value.substring(1);\n      }\n    });\n    return obj;\n  } // --------------------------------\n  //  Simple sleep implementation\n  // --------------------------------\n  ,\n  sleep: function sleep(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  }\n};\n/* harmony default export */ var utils_navigation = (navigation);\n// CONCATENATED MODULE: ./ui/src/pages/profile/ProfilePage.js\n\n\n\n\n\n\n\n\n\n\n\n\nvar ProfilePage_form = objectSpread_default()({}, store.user);\n\nvar ProfilePage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var id, view;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = utils_navigation.extractRequestURL()[1];\n              _context.next = 3;\n              return utils_fetchAPI("/users/".concat(id)).then(function (res) {\n                if (!res.success) {\n                  store.logout();\n                }\n\n                ProfilePage_form = res.data;\n                store.updateUser(res.data);\n              });\n\n            case 3:\n              _context.t0 = "\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-3\\">\\n            ";\n              _context.next = 6;\n              return leftSideBar.render();\n\n            case 6:\n              _context.t1 = _context.sent;\n              _context.t2 = ProfilePage_form.avatar_url || \'/images/profile-female.png\';\n              _context.t3 = ProfilePage_form.province === \'eastern\' ? \'selected\' : \'\';\n              _context.t4 = ProfilePage_form.province === \'kigali\' ? \'selected\' : \'\';\n              _context.t5 = ProfilePage_form.province === \'northern\' ? \'selected\' : \'\';\n              _context.t6 = ProfilePage_form.province === \'southern\' ? \'selected\' : \'\';\n              _context.t7 = ProfilePage_form.district;\n              _context.t8 = ProfilePage_form.first_name;\n              _context.t9 = ProfilePage_form.last_name;\n              _context.t10 = ProfilePage_form.gender === \'Male\' ? \'selected\' : \'\';\n              _context.t11 = ProfilePage_form.gender === \'Female\' ? \'selected\' : \'\';\n              _context.t12 = ProfilePage_form.email;\n              view = _context.t0.concat.call(_context.t0, _context.t1, "\\n          </div>\\n          <div class=\\"col-9\\">\\n            <br>\\n            <div class=\\"box order-container\\">\\n              <h2 class=\\"title-1 align-center\\">My Account</h3>\\n              <div class=\\"form-error error-message\\"></div>\\n              <form action=\\"#\\">\\n                <div class=\\"row\\">\\n                  <div class=\\"col-12 align-center\\">\\n                    <div\\n                      class=\\"profile-avatar\\"\\n                      style=\\"background-image: url(\'").concat(_context.t2, "\'), linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.6))\\"\\n                    >\\n                      <div class=\\"profile-avatar__edit\\">\\n                        <i class=\\"fa fa-pencil\\"></i>\\n                      </div>\\n                      <input type=\\"file\\" hidden name=\\"avatar\\" id=\\"avatar\\" />\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"province\\">Province</label>\\n                    <span class=\\"custom-dropdown\\" >\\n                      <select\\n                        class=\\"capitalize\\"\\n                        id=\\"province\\"\\n                        name=\\"province\\n                        required\\n                        placeholder=\\"Province\\"\\n                      >\\n                        <option ").concat(_context.t3, " value=\\"eastern\\">\\n                          Eastern Province\\n                        </option>\\n                        <option ").concat(_context.t4, " value=\\"kigali\\">\\n                          Kigali\\n                        </option>  \\n                        <option ").concat(_context.t5, " value=\\"northern\\">\\n                          Northen Province\\n                        </option>\\n                        <option ").concat(_context.t6, " value=\\"southern\\">\\n                          Southern Province\\n                        </option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error province\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"district\\">District</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select class=\\"capitalize\\" id=\\"district\\" name=\\"district\\" required>    \\n                        <option value=\\"\\">").concat(_context.t7, "</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error district\\"></div>\\n                  </div>\\n                </div>\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"first_name\\">First Name</label>\\n                    <input\\n                      type=\\"text\\"\\n                      name=\\"first_name\\"\\n                      id=\\"first_name\\"\\n                      placeholder=\\"First Name\\"\\n                      required\\n                      value=\\"").concat(_context.t8, "\\"\\n                    >\\n                    <div class=\\"form-error first_name\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"last_name\\">Last Name</label>\\n                    <input\\n                      type=\\"text\\"\\n                      name=\\"last_name\\"\\n                      id=\\"last_name\\"\\n                      placeholder=\\"First Name\\"\\n                      required\\n                      value=\\"").concat(_context.t9, "\\"\\n                    >\\n                    <div class=\\"form-error last_name\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"gender\\">Gender</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select id=\\"gender\\" name=\\"gender\\" disabled>\\n                        <option value=\\"\\">Select Gender</option> \\n                        <option value=\\"Male\\" ").concat(_context.t10, ">Male</option>\\n                        <option value=\\"Female\\" ").concat(_context.t11, ">Female</option>\\n                      </select>\\n                    </span>\\n                <div class=\\"form-error gender\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"email\\">Email</label>\\n                    <input\\n                      type=\\"text\\"\\n                      name=\\"email\\"\\n                      id=\\"email\\"\\n                      placeholder=\\"Email\\"\\n                      value=\\"").concat(_context.t12, "\\"\\n                      disabled\\n                    >\\n                    <div class=\\"form-error email\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"password\\">Password</label>\\n                    <input type=\\"password\\" name=\\"password\\" id=\\"password\\" placeholder=\\"Password\\">\\n                    <div class=\\"form-error password\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-12\\">\\n                    <label for=\\"address\\">Address</label>\\n                    <textarea\\n                      placeholder=\\"Enter full address\\"\\n                      rows=\\"5\\"\\n                      name=\\"address\\"\\n                      id=\\"address\\"\\n                      maxlength=\\"200\\"\\n                      required\\n                      ></textarea>\\n                    <div class=\\"form-error address\\"></div>\\n\\n                    <button\\n                      id=\\"submit-form\\"\\n                      class=\\"btn primary\\"\\n                    >\\n                      Update\\n                    </button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    ");\n              return _context.abrupt("return", view);\n\n            case 20:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var pricePerKg, formKeys, avatar, profileAvatar, avatarButton, firstName, firstNameError, lastName, lastNameError, province, provinceError, district, districtError, gender, genderError, password, passwordError, submitForm, errorMessage, loading, validateInputs, inputHandler, resetInputs, renderToProvince;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              renderToProvince = function _ref4() {\n                var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'\';\n                var province = value.toLocaleLowerCase() || \'\';\n\n                if (provinces[province]) {\n                  ProfilePage_form.to_province = province;\n                  var districts = provinces[province].districts || [];\n                  toDistrict.options.length = 0; //Reset district option to 0\n\n                  toDistrict.options[0] = new Option(\'Select District\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    var selected = index === ProfilePage_form.to_district;\n                    toDistrict.add(new Option(districts[index].name, index, \'\', selected));\n                  }\n\n                  ;\n                }\n              };\n\n              resetInputs = function _ref3() {\n                var keys = Object.keys(ProfilePage_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!ProfilePage_form[key] && ProfilePage_form[key] !== 0) {\n                    ProfilePage_form[key] = \'\';\n                    var tagElement = document.querySelector("#".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'\'; // tagElement.style.color = \'red\'\n                    }\n                  }\n                });\n                return hasError;\n              };\n\n              inputHandler = function _ref2(e) {\n                ProfilePage_form[e.target.id] = e.target.value;\n              };\n\n              validateInputs = function _ref(entries) {\n                var keys = Object.keys(entries);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!entries[key] && entries[key] !== 0) {\n                    var tagElement = document.querySelector(".form-error.".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'Required\';\n                      tagElement.style.color = \'red\';\n                      hasError = true;\n                    }\n                  }\n                });\n                return hasError;\n              };\n\n              pricePerKg = 1000;\n              googleMap.after_render(ProfilePage_form.from_district, ProfilePage_form.present_location || ProfilePage_form.to_district);\n              formKeys = Object.keys(ProfilePage_form); // Initialise select inputs\n\n              avatar = document.getElementById(\'avatar\');\n              profileAvatar = document.querySelectorAll(\'.profile-avatar\');\n              avatarButton = document.querySelector(\'.profile-avatar__edit\');\n              firstName = document.querySelector(\'#first_name\');\n              firstNameError = document.querySelector(\'.form-error.first_name\');\n              lastName = document.querySelector(\'#last_name\');\n              lastNameError = document.querySelector(\'.form-error.last_name\');\n              province = document.querySelector(\'#province\');\n              provinceError = document.querySelector(\'.form-error.province\');\n              district = document.querySelector(\'#district\');\n              districtError = document.querySelector(\'.form-error.district\');\n              gender = document.querySelector(\'#gender\');\n              genderError = document.querySelector(\'.form-error.gender\');\n              password = document.querySelector(\'#password\');\n              passwordError = document.querySelector(\'.form-error.password\');\n              submitForm = document.querySelector(\'#submit-form\');\n              errorMessage = document.querySelector(\'.form-error.error-message\');\n              loading = document.querySelector(\'.loading\');\n              password.addEventListener(\'input\', inputHandler);\n              firstName.addEventListener(\'input\', inputHandler);\n              lastName.addEventListener(\'input\', inputHandler);\n              province.addEventListener(\'input\', inputHandler);\n              district.addEventListener(\'input\', inputHandler);\n              avatarButton.addEventListener(\'click\', function () {\n                avatar.click();\n              });\n              avatar.addEventListener("change", function (e) {\n                if (avatar.files.length > 0) {\n                  loading.classList.add(\'active\');\n                  var formData = new FormData();\n                  formData.append(\'avatar\', avatar.files[0]);\n                  utils_fetchAPI("/users/".concat(ProfilePage_form.id, "/avatar"), {\n                    method: \'PUT\',\n                    body: formData\n                  }, true).then(function (res) {\n                    if (res.success) {\n                      ProfilePage_form.avatar_url = res.avatar_url;\n                      profileAvatar.forEach(function (el) {\n                        el.style.backgroundImage = "\\n                url(\\"".concat(ProfilePage_form.avatar_url, "\\"), linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.6))\\n              ");\n                      });\n                      store.user = objectSpread_default()({}, store.user, {\n                        avatar_url: ProfilePage_form.avatar_url\n                      });\n                      store.updateUser(store.user);\n                    }\n\n                    setTimeout(function () {\n                      loading.classList.remove(\'active\');\n                    }, 1000);\n                  }).catch(function (err) {\n                    console.log(err);\n                    setTimeout(function () {\n                      loading.classList.remove(\'active\');\n                    }, 2000);\n                  });\n                }\n              });\n              province.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  ProfilePage_form.province = value;\n                  var districts = provinces[value].districts || [];\n                  district.options.length = 0; //Reset district option to 0\n\n                  district.options[0] = new Option(\'Select\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    district.add(new Option(districts[index].name, index));\n                  }\n\n                  ;\n                }\n              });\n              district.addEventListener(\'change\', function (e) {\n                ProfilePage_form.district = e.target.value;\n              });\n              gender.addEventListener(\'change\', function (e) {\n                ProfilePage_form.gender = e.target.value;\n              });\n              submitForm.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n                errorMessage.textContent = \'\';\n                var hasError = false; // Reset form errors to empty string\n\n                passwordError.textContent = \'\'; // Validate password\n\n                if (!ProfilePage_form.password) {\n                  passwordError.style.color = \'red\';\n                  passwordError.textContent = \'Password Required.\';\n                  hasError = true;\n                }\n\n                if (ProfilePage_form.password && ProfilePage_form.password.length < 6) {\n                  passwordError.style.color = \'red\';\n                  passwordError.textContent = \'Password must be at least 6 characters.\';\n                  hasError = true;\n                }\n\n                if (!ProfilePage_form.province) {\n                  provinceError.style.color = \'red\';\n                  provinceError.textContent = \'Province Required.\';\n                  hasError = true;\n                }\n\n                if (!ProfilePage_form.district) {\n                  districtError.style.color = \'red\';\n                  districtError.textContent = \'District Required.\';\n                  hasError = true;\n                }\n\n                if (!ProfilePage_form.first_name) {\n                  firstNameError.style.color = \'red\';\n                  firstNameError.textContent = \'First Name Required.\';\n                  hasError = true;\n                }\n\n                if (!ProfilePage_form.last_name) {\n                  lastNameError.style.color = \'red\';\n                  lastNameError.textContent = \'Last Name Required.\';\n                  hasError = true;\n                }\n\n                if (hasError) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                var formData = {\n                  first_name: ProfilePage_form.first_name,\n                  last_name: ProfilePage_form.last_name,\n                  province: ProfilePage_form.province,\n                  district: ProfilePage_form.district,\n                  address: ProfilePage_form.address,\n                  password: ProfilePage_form.password\n                };\n                utils_fetchAPI("/users/".concat(ProfilePage_form.id), {\n                  method: \'PUT\',\n                  body: objectSpread_default()({}, formData)\n                }).then(function (res) {\n                  var success = res.success,\n                      data = res.data;\n\n                  if (res.message) {\n                    errorMessage.textContent = res.message;\n                    utils_model({\n                      title: res.message\n                    });\n                  }\n\n                  if (success) {\n                    store.user = objectSpread_default()({}, data);\n                    store.updateUser(data);\n                    var title = res.message || \'Information updated\';\n                    var body = "\\n              <p class=\\"capitalize\\" style=\\"font-size: 1rem; line-height: 2rem;\\">\\n                <b>Province</b>: ".concat(ProfilePage_form.province, "<br>\\n                <b>District</b>: ").concat(ProfilePage_form.district, "<br>\\n                <b>Gender</b>: ").concat(ProfilePage_form.gender, "<br>\\n                <b>Names</b>: ").concat(ProfilePage_form.first_names, " ").concat(ProfilePage_form.last_names, "<br>\\n                <b>Address</b>: ").concat(ProfilePage_form.address, "<br>\\n              </p>\\n            ");\n                    utils_model({\n                      title: title,\n                      body: body\n                    });\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                    utils_model({\n                      title: err.message\n                    });\n                  }\n                });\n              });\n\n            case 36:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var ProfilePage = (ProfilePage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/profile/ConfirmEmailPage.js\n\n\n\n\n\nvar ConfirmEmailPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt("return", "\\n  <div class=\\"container\\">\\n    <div class=\\"row content-center\\">\\n      <div class=\\"col-8\\"><br><br>\\n        <div class=\\"box align-center\\">\\n          <h2 class=\\"align-center\\">Confirm email</h2>\\n          <div class=\\"form-error error-message p-20\\"></div>\\n          \\n          <a class=\\"btn primary align-center mb-10\\" href=\\"/#/\\">Go to Home</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n ");\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var params, userId, confirmationCode, errorMessage, loading, inputHandler;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              inputHandler = function _ref(e) {\n                form[e.target.id] = e.target.value;\n              };\n\n              params = utils_navigation.extractRequestURL();\n              userId = params[1];\n              confirmationCode = params[3];\n              errorMessage = document.querySelector(\'.form-error.error-message\');\n              loading = document.querySelector(\'.loading\');\n              utils_fetchAPI("/users/".concat(userId, "/confirm_email/").concat(confirmationCode)).then(function (res) {\n                if (res.success) {\n                  errorMessage.style.color = \'green\';\n                }\n\n                errorMessage.textContent = res.message || \'\'; // Wait for 2 seconds to smooth the spinner\n\n                setTimeout(function () {\n                  loading.classList.remove(\'active\');\n                }, 2000);\n              }).catch(function (err) {\n                loading.classList.remove(\'active\');\n\n                if (err.message) {\n                  errorMessage.textContent = err.message;\n                }\n              }); // Callback function to handle email and password imput\n\n            case 7:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var ConfirmEmailPage = (ConfirmEmailPage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/parcel/MyParcelsPage.js\n\n\n\n\n\n\nvar parcels = {\n  data: [],\n  page: 1,\n  total: 0\n};\nvar counters = {\n  delivered: 0,\n  in_progress: 0\n};\nvar MyParcelsPage_page = 1;\nvar keywords = \'\';\nvar MyParcelsPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var _store$user, user, params, parcelsUrl, parcelsData, result, view;\n\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _store$user = store.user, user = _store$user === void 0 ? \'\' : _store$user;\n              params = utils_navigation.extractQuery();\n\n              if (!user.id) {\n                _context.next = 17;\n                break;\n              }\n\n              keywords = params.search || \'\';\n              MyParcelsPage_page = params.page || 1;\n              parcelsUrl = "/users/".concat(user.id, "/parcels?page=").concat(MyParcelsPage_page, "&search=").concat(keywords);\n              _context.next = 8;\n              return utils_fetchAPI(parcelsUrl);\n\n            case 8:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.t0 = parcels;\n\n            case 11:\n              parcelsData = _context.t0;\n              parcels = parcels.data ? parcelsData : parcels;\n              _context.next = 15;\n              return utils_fetchAPI("/users/".concat(user.id, "/counters"));\n\n            case 15:\n              result = _context.sent;\n              counters = result.counters || counters;\n\n            case 17:\n              _context.t1 = "\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-3\\">\\n            ";\n              _context.next = 20;\n              return leftSideBar.render();\n\n            case 20:\n              _context.t2 = _context.sent;\n              _context.t3 = counters.delivered + counters.in_progress || 0;\n              _context.t4 = counters.delivered || 0;\n              _context.t5 = counters.in_progress || 0;\n              _context.t6 = keywords;\n              _context.t7 = parcels.data.map(function (val, index) {\n                return "\\n                        <tr class=\\"capitalize\\">\\n                          <td>".concat(index + 1, "</td>\\n                          <td>").concat(val.from_province, ", ").concat(val.from_district, "</td>\\n                          <td>").concat(val.to_province, ", ").concat(val.to_district, "</td>\\n                          <td>").concat(val.receiver_names, "</td>\\n                          <td>").concat(val.created_at.substring(0, 10), "</td>\\n                          <td>").concat(val.status, "</td>\\n                          <td class=\\"align-right\\">\\n                            <a href=\\"/#/parcels/").concat(val.id, "\\" class=\\"btn-edit\\">\\n                              <i class=\\"fa fa-edit\\"></i>\\n                            </a>\\n                          </td>\\n                        </tr>\\n                        ");\n              }).join(\'\\n \');\n              _context.t8 = parcels.page > 1 ? "href=\\"/#/admin_parcels?page=".concat(parcels.page - 1, "\\"") : \'\';\n              _context.t9 = parcels.page === 1 ? \'disabled\' : \'\';\n              _context.t10 = parcels.page <= parcels.totalPage ? "href=\\"/#/admin_parcels?page=".concat(parcels.page + 1, "\\"") : \'\';\n              _context.t11 = parcels.page >= parcels.totalPage ? \'disabled\' : \'\';\n              view = _context.t1.concat.call(_context.t1, _context.t2, "\\n          </div>\\n          <div class=\\"col-9\\">\\n            <div class=\\"row mt-5\\">\\n              <div class=\\"col-4\\">\\n                <div class=\\"box profile-counter\\">\\n                  <p>Total Order: <strong>").concat(_context.t3, "</strong></p>\\n                </div>\\n              </div>\\n              <div class=\\"col-4\\">\\n                <div class=\\"box profile-counter\\">\\n                  <p><i class=\\"fa fa-tick\\"></i> Delivered: <strong>").concat(_context.t4, "</strong></p>\\n                </div>\\n              </div>\\n              <div class=\\"col-4\\">\\n                <div class=\\"box profile-counter\\">\\n                  <p><i class=\\"fa fa-truck\\"></i> In Process: <strong>").concat(_context.t5, "</strong></p>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\"row\\">\\n              <div class=\\"col-12\\">\\n                <h3 class=\\"title-1 align-center\\">Parcels</h3>\\n                <form>\\n                  <div class=\\"input-block is-row search\\">\\n                    <input\\n                      id=\\"search-input\\"\\n                      type=\\"text\\" name=\\"search\\"\\n                      placeholder=\\"Search for parcels\\"\\n                      value=\\"").concat(_context.t6, "\\"\\n                    >\\n                  <i class=\\"fa fa-search icon-btn\\"></i>\\n                  </div>\\n                </form>\\n                <table class=\\"table\\">\\n                  <thead>\\n                    <tr>\\n                      <th width=\\"20\\" >No.</th>\\n                      <th>From</th>\\n                      <th>To</th>\\n                      <th width=\\"140\\">Receiver</th>\\n                      <th width=\\"110\\">Date</th>\\n                      <th width=\\"100\\">Status</th>\\n                      <th width=\\"100\\">Action</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    ").concat(_context.t7, "\\n                  </tbody>\\n                </table>\\n                <nav class=\\"pagination\\">\\n                  <a\\n                    ").concat(_context.t8, "\\n                    ").concat(_context.t9, "\\n                  >\\n                    <i class=\\"fa fa-angle-left\\"></i> Previous\\n                  </a>\\n                  <a\\n                    ").concat(_context.t10, "\\n                    ").concat(_context.t11, "\\n                  >\\n                    Next <i class=\\"fa fa-angle-right\\"></i>\\n                  </a>\\n                </nav>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    ");\n              return _context.abrupt("return", view);\n\n            case 32:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var searchInput;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              searchInput = document.querySelector(\'#search-input\');\n              searchInput.addEventListener(\'keypress\', function (e) {\n                if (e.keyCode === 13) {\n                  e.preventDefault();\n\n                  var _nav$extractQuery = utils_navigation.extractQuery(),\n                      _nav$extractQuery$pag = _nav$extractQuery.page,\n                      _page = _nav$extractQuery$pag === void 0 ? 1 : _nav$extractQuery$pag;\n\n                  location.href = "/#/admin_parcels?page=".concat(_page, "&search=").concat(keywords);\n                }\n              });\n              searchInput.addEventListener(\'keyup\', function (e) {\n                if (e.keyCode === 13) {\n                  e.preventDefault();\n                }\n\n                keywords = e.target.value;\n              });\n\n            case 3:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var MyParcelsPage = (MyParcelsPage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/parcel/CreateParcelPage.js\n\n\n\n\n\n\n\n\n\n\nvar CreateParcelPage_form = {\n  from_province: \'\',\n  from_district: \'\',\n  to_district: \'\',\n  to_province: \'\',\n  receiver_names: \'\',\n  receiver_phone: \'\',\n  receiver_address: \'\',\n  weight: \'\'\n};\nvar CreateParcelPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var params, view;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              params = utils_navigation.extractQuery();\n              CreateParcelPage_form.from_province = params.from_province || \'\';\n              CreateParcelPage_form.from_district = params.from_district || \'District - Origin\';\n              CreateParcelPage_form.to_province = params.to_province || \'\';\n              CreateParcelPage_form.to_district = params.to_district || \'District - Destination\';\n              _context.t1 = "\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-3\\">\\n            ";\n              _context.next = 8;\n              return leftSideBar.render();\n\n            case 8:\n              _context.t2 = _context.sent;\n              _context.t0 = _context.t1.concat.call(_context.t1, _context.t2, "\\n          </div>\\n          <div class=\\"col-9\\">\\n            <br>\\n            ");\n              _context.next = 12;\n              return googleMap.render(CreateParcelPage_form.from_district, CreateParcelPage_form.to_district);\n\n            case 12:\n              _context.t3 = _context.sent;\n              _context.t4 = CreateParcelPage_form.from_province === \'eastern\' ? \'selected\' : \'\';\n              _context.t5 = CreateParcelPage_form.from_province === \'kigali\' ? \'selected\' : \'\';\n              _context.t6 = CreateParcelPage_form.from_province === \'northern\' ? \'selected\' : \'\';\n              _context.t7 = CreateParcelPage_form.from_province === \'southern\' ? \'selected\' : \'\';\n              _context.t8 = CreateParcelPage_form.from_district;\n              _context.t9 = CreateParcelPage_form.to_province === \'eastern\' ? \'selected\' : \'\';\n              _context.t10 = CreateParcelPage_form.to_province === \'kigali\' ? \'selected\' : \'\';\n              _context.t11 = CreateParcelPage_form.to_province === \'northern\' ? \'selected\' : \'\';\n              _context.t12 = CreateParcelPage_form.to_province === \'southern\' ? \'selected\' : \'\';\n              _context.t13 = CreateParcelPage_form.to_district;\n              _context.t14 = CreateParcelPage_form.to_district;\n              view = _context.t0.concat.call(_context.t0, _context.t3, "\\n            <div class=\\"box order-container\\">\\n              <h2 class=\\"title-1 align-center\\">Create a parcel</h3>\\n              <div class=\\"quote-result\\">\\n                <p>From <strong>-</strong> to <strong>-</strong>, a parcel of \\n                  <strong>-</strong> costs <strong>-</strong>\\n                </p>\\n              </div>\\n              <div class=\\"form-error error-message\\"></div>\\n              <form action=\\"#\\">\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6\\">\\n                    <label>Province - Origin</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select\\n                        id=\\"from_province\\"\\n                        name=\\"from_province\\n                        required\\n                        placeholder=\\"From Province\\"\\n                      >\\n                        <option value=\\"\\">Select Province</option> \\n                        <option ").concat(_context.t4, " value=\\"eastern\\">\\n                            Eastern Province\\n                          </option>\\n                          <option ").concat(_context.t5, " value=\\"kigali\\">\\n                            Kigali\\n                          </option>  \\n                          <option ").concat(_context.t6, " value=\\"northern\\">\\n                            Northen Province\\n                          </option>\\n                          <option ").concat(_context.t7, " value=\\"southern\\">\\n                            Southern Province\\n                          </option>\\n                        </select>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error from_province\\"></div>\\n                    \\n                    <label>District - Origin</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select id=\\"from_district\\" name=\\"from_district\\" required>    \\n                      <option value=\\"\\">").concat(_context.t8, "</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error from_district\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label>Province - Destination</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select id=\\"to_province\\" name=\\"to_province\\" required>\\n                        <option value=\\"\\">Select Province</option> \\n                        <option ").concat(_context.t9, " value=\\"eastern\\">\\n                          Eastern Province\\n                        </option>\\n                        <option ").concat(_context.t10, " value=\\"kigali\\">\\n                          Kigali\\n                        </option>  \\n                        <option ").concat(_context.t11, " value=\\"northern\\">\\n                          Northen Province\\n                        </option>\\n                        <option ").concat(_context.t12, " value=\\"southern\\">\\n                          Southern Province\\n                        </option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error to_province\\"></div>\\n                   \\n                    <label>District - Destination</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select id=\\"to_district\\" name=\\"to_district\\" required>    \\n                        <option value=\\"\\">").concat(_context.t13, "</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error to_district\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6 pv-less\\">\\n                    <label>Parcel\'s weight</label>\\n                    <input\\n                      type=\\"number\\"\\n                      name=\\"weight\\"\\n                      id=\\"weight\\"\\n                      placeholder=\\"Weight\\"\\n                      min=\\"0\\"\\n                      value=\\"").concat(_context.t14, "\\"\\n                      required\\n                    >\\n                    <div class=\\"form-error weight\\"></div>\\n                  </div>\\n                  <div class=\\"col-6 pv-less\\">\\n                    <label>Receiver\'s Phone Number</label>\\n                    <input\\n                      type=\\"number\\"\\n                      name=\\"phone\\"\\n                      id=\\"receiver_phone\\"\\n                      placeholder=\\"Phone Number\\"\\n                      required\\n                    >\\n                    <div class=\\"form-error receiver_phone\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6 pv-less\\">\\n                    <label>Receiver\'s Names</label>\\n                    <input\\n                      type=\\"text\\"\\n                      name=\\"receiver_names\\"\\n                      id=\\"receiver_names\\"\\n                      placeholder=\\"Receiver\'s Names\\"\\n                      required\\n                    >\\n                    <div class=\\"form-error receiver_names\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-12 pv-less\\">\\n                    <label>Receiver\'s Address</label>\\n                    <textarea\\n                      placeholder=\\"Enter full address\\"\\n                      rows=\\"5\\"\\n                      name=\\"receiver_address\\"\\n                      id=\\"receiver_address\\"\\n                      maxlength=\\"200\\"\\n                      required\\n                      ></textarea>\\n                    <div class=\\"form-error receiver_address\\"></div>\\n\\n                    <button id=\\"submit-form\\" class=\\"btn primary\\">\\n                      Submit\\n                    </button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    ");\n              return _context.abrupt("return", view);\n\n            case 26:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var pricePerKg, formKeys, fromProvince, fromDistrict, toProvince, toDistrict, receiverNames, receiverPhone, weight, receiverAddress, quoteResult, submitForm, errorMessage, loading, inputHandler, renderDetails, validateInputs, resetInputs;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              resetInputs = function _ref4() {\n                var keys = Object.keys(CreateParcelPage_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!CreateParcelPage_form[key] && CreateParcelPage_form[key] !== 0) {\n                    CreateParcelPage_form[key] = \'\';\n                    document.querySelector("#".concat(key)).textContent = \'\'; // document.querySelector(`#form-error`). = \'red\'\n                  }\n                });\n                return hasError;\n              };\n\n              validateInputs = function _ref3() {\n                var keys = Object.keys(CreateParcelPage_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!CreateParcelPage_form[key] && CreateParcelPage_form[key] !== 0) {\n                    var tagElement = document.querySelector(".form-error.".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'Required\';\n                      tagElement.style.color = \'red\';\n                      hasError = true;\n                    }\n                  } // Set all null field to an empty string\n\n\n                  if (CreateParcelPage_form[key] === null) {\n                    CreateParcelPage_form[key] = \'\';\n                  }\n                });\n                return hasError;\n              };\n\n              renderDetails = function _ref2() {\n                var price = utils_getPrice(CreateParcelPage_form.weight);\n                CreateParcelPage_form.price = price;\n                quoteResult.innerHTML = "\\n      <p>\\n        From <strong class=\\"capitalize\\">".concat(CreateParcelPage_form.from_district || \'-\', "</strong> \\n        to <strong class=\\"capitalize\\">").concat(CreateParcelPage_form.to_district || \'-\', "</strong>, a parcel of \\n        <strong class=\\"capitalize\\">").concat(CreateParcelPage_form.weight || \'-\', " Kg</strong> costs <strong>\\n        ").concat(price ? price.toLocaleString() : \'-\', " RWF</strong>\\n      </p>");\n                googleMap.after_render(CreateParcelPage_form.from_district, CreateParcelPage_form.present_location || CreateParcelPage_form.to_district);\n              };\n\n              inputHandler = function _ref(e) {\n                var _e$target = e.target,\n                    value = _e$target.value,\n                    id = _e$target.id;\n\n                if (id === \'receiver_phone\') {\n                  value = value.replace(/\\D+/g, \'\');\n                }\n\n                CreateParcelPage_form[id] = value;\n                renderDetails();\n              };\n\n              _context2.next = 6;\n              return googleMap.after_render();\n\n            case 6:\n              pricePerKg = 1000;\n              formKeys = Object.keys(CreateParcelPage_form); // From province and distrinct\n\n              fromProvince = document.querySelector(\'#from_province\');\n              fromDistrict = document.querySelector(\'#from_district\'); // To province and distrinct\n\n              toProvince = document.querySelector(\'#to_province\');\n              toDistrict = document.querySelector(\'#to_district\');\n              receiverNames = document.querySelector(\'#receiver_names\');\n              receiverPhone = document.querySelector(\'#receiver_phone\');\n              weight = document.querySelector(\'#weight\');\n              receiverAddress = document.querySelector(\'#receiver_address\');\n              quoteResult = document.querySelector(\'.quote-result\');\n              submitForm = document.querySelector(\'#submit-form\');\n              errorMessage = document.querySelector(\'.form-error.error-message\');\n              loading = document.querySelector(\'.loading\');\n              receiverAddress.addEventListener(\'input\', inputHandler);\n              receiverNames.addEventListener(\'input\', inputHandler);\n              receiverPhone.addEventListener(\'input\', inputHandler);\n              weight.addEventListener(\'input\', inputHandler);\n              fromProvince.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  CreateParcelPage_form.from_province = value;\n                  var districts = provinces[value].districts || [];\n                  fromDistrict.options.length = 0; //Reset district option to 0\n\n                  fromDistrict.options[0] = new Option(\'Select District\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    fromDistrict.add(new Option(districts[index].name, index));\n                  }\n\n                  ;\n                }\n              });\n              toProvince.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  CreateParcelPage_form.to_province = value;\n                  var districts = provinces[value].districts || [];\n                  toDistrict.options.length = 0; //Reset district option to 0\n\n                  toDistrict.options[0] = new Option(\'Select District\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    toDistrict.add(new Option(districts[index].name, index));\n                  }\n\n                  ;\n                }\n              });\n              fromDistrict.addEventListener(\'change\', function (e) {\n                CreateParcelPage_form.from_district = e.target.value;\n                renderDetails();\n              });\n              toDistrict.addEventListener(\'change\', function (e) {\n                CreateParcelPage_form.to_district = e.target.value;\n                renderDetails();\n              });\n              submitForm.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n\n                if (validateInputs()) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                var formData = objectSpread_default()({}, CreateParcelPage_form);\n\n                delete formData.price;\n                utils_fetchAPI(\'/parcels\', {\n                  method: \'POST\',\n                  body: objectSpread_default()({}, formData)\n                }).then(function (res) {\n                  var data = res.data;\n\n                  if (res.message) {\n                    errorMessage.textContent = res.message;\n                  }\n\n                  if (data) {\n                    var title = res.message || \'Parcel created\';\n                    var body = "\\n              <p>\\n                <b class=\\"capitalize\\">From</b>: ".concat(data.from_province, ", ").concat(data.from_district, "<br>\\n                <b class=\\"capitalize\\">To</b>: ").concat(data.to_province, ", ").concat(data.to_district, "<br>\\n                <b class=\\"capitalize\\">Receiver</b>: ").concat(data.receiver_names, "\\n                <b class=\\"capitalize\\">Weight</b>: ").concat(data.weight, "\\n                <b class=\\"capitalize\\">Price</b>: ").concat(data.price, "\\n              </p>\\n            ");\n                    utils_model({\n                      title: title,\n                      body: body,\n                      reload: true\n                    });\n                    resetInputs();\n                    setTimeout(function () {// location.href = `/#/profile/${data.id}`;\n                    }, 1000);\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                  }\n                });\n              }); // Callback function to handle email and password imput\n\n            case 29:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var CreateParcelPage = (CreateParcelPage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/parcel/UpdateParcelPage.js\n\n\n\n\n\n\n\n\n\nvar UpdateParcelPage_form = {\n  from_province: \'\',\n  from_district: \'\',\n  to_district: \'\',\n  to_province: \'\',\n  receiver_names: \'\',\n  receiver_phone: \'\',\n  receiver_address: \'\',\n  weight: \'\'\n};\nvar UpdateParcelPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var id, view;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = utils_navigation.extractRequestURL()[1];\n              _context.next = 3;\n              return utils_fetchAPI("/parcels/".concat(id)).then(function (res) {\n                UpdateParcelPage_form = res.data;\n              });\n\n            case 3:\n              _context.t1 = "\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-3\\">\\n            ";\n              _context.next = 6;\n              return leftSideBar.render();\n\n            case 6:\n              _context.t2 = _context.sent;\n              _context.t0 = _context.t1.concat.call(_context.t1, _context.t2, "\\n          </div>\\n          <div class=\\"col-9\\">\\n            <br>\\n            ");\n              _context.next = 10;\n              return googleMap.render();\n\n            case 10:\n              _context.t3 = _context.sent;\n              _context.t4 = UpdateParcelPage_form.from_district;\n              _context.t5 = UpdateParcelPage_form.to_district;\n              _context.t6 = UpdateParcelPage_form.weight;\n              _context.t7 = UpdateParcelPage_form.price.toLocaleString();\n              _context.t8 = UpdateParcelPage_form.status === \'Cancelled\' || UpdateParcelPage_form.status === \'In Transit\' || UpdateParcelPage_form.status === \'Delivered\' ? \'disabled\' : \'\';\n              _context.t9 = UpdateParcelPage_form.status === \'Cancelled\' ? \'Parcel cancelled\' : \'Cancel\';\n              _context.t10 = UpdateParcelPage_form.from_province;\n              _context.t11 = UpdateParcelPage_form.from_district;\n              _context.t12 = UpdateParcelPage_form.to_province === \'eastern\' ? \'selected\' : \'\';\n              _context.t13 = UpdateParcelPage_form.to_province === \'kigali\' ? \'selected\' : \'\';\n              _context.t14 = UpdateParcelPage_form.to_province === \'northern\' ? \'selected\' : \'\';\n              _context.t15 = UpdateParcelPage_form.to_province === \'southern\' ? \'selected\' : \'\';\n              _context.t16 = UpdateParcelPage_form.to_district;\n              _context.t17 = UpdateParcelPage_form.weight;\n              _context.t18 = UpdateParcelPage_form.receiver_phone;\n              _context.t19 = UpdateParcelPage_form.receiver_names;\n              _context.t20 = UpdateParcelPage_form.receiver_address;\n              _context.t21 = UpdateParcelPage_form.status !== \'Waiting Pickup\' ? \'disabled\' : \'\';\n              view = _context.t0.concat.call(_context.t0, _context.t3, "\\n            <div class=\\"box order-container\\">\\n              <h2 class=\\"title-1 align-center\\">Update parcel\'s destination</h3>\\n              <div class=\\"quote-result\\">\\n                <p>From <strong class=\\"capitalize\\">").concat(_context.t4, "</strong> to \\n                  <strong class=\\"capitalize\\">").concat(_context.t5, "</strong>, a parcel of \\n                  <strong class=\\"capitalize\\">").concat(_context.t6, " KG</strong class=\\"capitalize\\"> \\n                  costs <strong>").concat(_context.t7, " RWF</strong>\\n                </p>\\n              </div>\\n              <div class=\\"form-error error-message\\"></div>\\n              <form action=\\"#\\">\\n                <div class=\\"row\\">\\n                  <div class=\\"col-12 align-center\\">\\n                    <button\\n                      id=\\"submit-cancel\\"\\n                      class=\\"btn primary\\"\\n                      ").concat(_context.t8, "\\n                    >\\n                      ").concat(_context.t9, "\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6\\">\\n                    <label>Province - Origin</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select\\n                        class=\\"capitalize\\"\\n                        id=\\"from_province\\"\\n                        name=\\"from_province\\n                        required\\n                        placeholder=\\"From Province\\"\\n                        disabled\\n                      >\\n                        <option value=\\"\\">").concat(_context.t10, "</option> \\n                        <option value=\\"eastern\\">Eastern Province</option>\\n                        <option value=\\"kigali\\">Kigali</option>  \\n                        <option value=\\"northern\\">Northen Province</option>\\n                        <option value=\\"southern\\">Southern Province</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error from_province\\"></div>\\n                   \\n                    <label>District - Origin</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select\\n                        class=\\"capitalize\\"\\n                        id=\\"from_district\\"\\n                        name=\\"from_district\\"\\n                        required\\n                        disabled\\n                      >    \\n                        <option value=\\"\\">").concat(_context.t11, "</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error from_district\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label>Province - Destination</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select id=\\"to_province\\" name=\\"to_province\\" required value=\\"southern\\">\\n                        <option value=\\"\\">Province - Destination</option> \\n                        <option ").concat(_context.t12, " value=\\"eastern\\">\\n                          Eastern Province\\n                        </option>\\n                        <option ").concat(_context.t13, " value=\\"kigali\\">\\n                          Kigali\\n                        </option>  \\n                        <option ").concat(_context.t14, " value=\\"northern\\">\\n                          Northen Province\\n                        </option>\\n                        <option ").concat(_context.t15, " value=\\"southern\\">\\n                          Southern Province\\n                        </option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error to_province\\"></div>\\n\\n                    <label>District - Destination</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select class=\\"capitalize\\" id=\\"to_district\\" name=\\"to_district\\" required>    \\n                        <option value=\\"\\">").concat(_context.t16, "</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error to_district\\"></div>\\n                  </div>\\n                </div>\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6 pv-less\\">\\n                    <label>Receiver\'s Phone Number</label>\\n                    <input\\n                      type=\\"number\\"\\n                      name=\\"weight\\"\\n                      id=\\"weight\\"\\n                      placeholder=\\"Weight\\"\\n                      required\\n                      value=\\"").concat(_context.t17, "\\"\\n                    >\\n                    <div class=\\"form-error weight\\"></div>\\n                  </div>\\n                  <div class=\\"col-6 pv-less\\">\\n                    <label>Receiver\'s Phone Number</label>\\n                    <input\\n                      type=\\"number\\"\\n                      name=\\"phone\\"\\n                      id=\\"receiver_phone\\"\\n                      placeholder=\\"Phone Number\\"\\n                      required\\n                      value=\\"").concat(_context.t18, "\\"\\n                    >\\n                    <div class=\\"form-error receiver_phone\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6 pv-less\\">\\n                    <label>Receiver\'s Names</label>\\n                    <input\\n                      type=\\"text\\"\\n                      name=\\"receiver_names\\"\\n                      id=\\"receiver_names\\"\\n                      placeholder=\\"Receiver\'s Names\\"\\n                      required\\n                      value=\\"").concat(_context.t19, "\\"\\n                    >\\n                    <div class=\\"form-error receiver_names\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-12 pv-less\\">\\n                    <label>Receiver\'s Address</label>\\n                    <textarea\\n                      placeholder=\\"Enter full address\\"\\n                      rows=\\"5\\"\\n                      name=\\"receiver_address\\"\\n                      id=\\"receiver_address\\"\\n                      maxlength=\\"200\\"\\n                      required\\n                      value=\\"").concat(_context.t20, "\\"\\n                      ></textarea>\\n                    <div class=\\"form-error receiver_address\\"></div>\\n\\n                    <button\\n                      id=\\"submit-form\\"\\n                      class=\\"btn primary\\"\\n                      ").concat(_context.t21, "\\n                    >\\n                      Update\\n                    </button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    ");\n              return _context.abrupt("return", view);\n\n            case 31:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var pricePerKg, formKeys, fromProvince, fromDistrict, toProvince, toDistrict, receiverNames, receiverPhone, weight, receiverAddress, quoteResult, submitForm, submitCancel, errorMessage, loading, inputHandler, renderDetails, validateInputs, resetInputs, renderToProvince;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              renderToProvince = function _ref5() {\n                var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'\';\n                var province = value.toLocaleLowerCase() || \'\';\n\n                if (provinces[province]) {\n                  UpdateParcelPage_form.to_province = province;\n                  var districts = provinces[province].districts || [];\n                  toDistrict.options.length = 0; //Reset district option to 0\n\n                  toDistrict.options[0] = new Option(\'Select District\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    var selected = index === UpdateParcelPage_form.to_district;\n                    toDistrict.add(new Option(districts[index].name, index, \'\', selected));\n                  }\n\n                  ;\n                }\n              };\n\n              resetInputs = function _ref4() {\n                var keys = Object.keys(UpdateParcelPage_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!UpdateParcelPage_form[key] && UpdateParcelPage_form[key] !== 0) {\n                    UpdateParcelPage_form[key] = \'\';\n                    var tagElement = document.querySelector("#".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'\'; // tagElement.style.color = \'red\'\n                    }\n                  }\n                });\n                return hasError;\n              };\n\n              validateInputs = function _ref3() {\n                var keys = Object.keys(UpdateParcelPage_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!UpdateParcelPage_form[key] && UpdateParcelPage_form[key] !== 0) {\n                    var tagElement = document.querySelector(".form-error.".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'Required\';\n                      tagElement.style.color = \'red\';\n                      hasError = true;\n                    }\n                  } // Set all null field to an empty string\n\n\n                  if (UpdateParcelPage_form[key] === null) {\n                    UpdateParcelPage_form[key] = \'\';\n                  }\n                });\n                return hasError;\n              };\n\n              renderDetails = function _ref2() {\n                var price = utils_getPrice(UpdateParcelPage_form.weight);\n                UpdateParcelPage_form.price = price;\n                quoteResult.innerHTML = "\\n      <p>\\n        From <strong>".concat(UpdateParcelPage_form.from_district || \'-\', "</strong> \\n        to <strong class=\\"capitalize\\">").concat(UpdateParcelPage_form.to_district || \'-\', "</strong>, a parcel of \\n        <strong class=\\"capitalize\\">").concat(UpdateParcelPage_form.weight || \'-\', " Kg</strong> costs <strong>\\n        ").concat(price ? price.toLocaleString() : \'-\', " RWF</strong>\\n      </p>");\n\n                if (UpdateParcelPage_form.to_district) {\n                  googleMap.after_render(UpdateParcelPage_form.from_district, UpdateParcelPage_form.to_district);\n                }\n              };\n\n              inputHandler = function _ref(e) {\n                UpdateParcelPage_form[e.target.id] = e.target.value;\n                renderDetails();\n              };\n\n              pricePerKg = 1000;\n              googleMap.after_render(UpdateParcelPage_form.from_district, UpdateParcelPage_form.present_location || UpdateParcelPage_form.to_district);\n              formKeys = Object.keys(UpdateParcelPage_form); // From province and distrinct\n\n              fromProvince = document.querySelector(\'#from_province\');\n              fromDistrict = document.querySelector(\'#from_district\'); // To province and distrinct\n\n              toProvince = document.querySelector(\'#to_province\');\n              toDistrict = document.querySelector(\'#to_district\');\n              receiverNames = document.querySelector(\'#receiver_names\');\n              receiverPhone = document.querySelector(\'#receiver_phone\');\n              weight = document.querySelector(\'#weight\');\n              receiverAddress = document.querySelector(\'#receiver_address\');\n              quoteResult = document.querySelector(\'.quote-result\');\n              submitForm = document.querySelector(\'#submit-form\');\n              submitCancel = document.querySelector(\'#submit-cancel\');\n              errorMessage = document.querySelector(\'.form-error.error-message\');\n              loading = document.querySelector(\'.loading\');\n              receiverAddress.addEventListener(\'input\', inputHandler);\n              receiverNames.addEventListener(\'input\', inputHandler);\n              receiverPhone.addEventListener(\'input\', inputHandler);\n              weight.addEventListener(\'input\', inputHandler);\n              toProvince.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  renderToProvince(value);\n                }\n              });\n              toDistrict.addEventListener(\'change\', function (e) {\n                UpdateParcelPage_form.to_district = e.target.value;\n                renderDetails();\n              });\n              submitForm.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n\n                if (validateInputs()) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                var body = {\n                  to_province: UpdateParcelPage_form.to_province,\n                  to_district: UpdateParcelPage_form.to_district,\n                  receiver_names: UpdateParcelPage_form.receiver_names,\n                  receiver_address: UpdateParcelPage_form.receiver_address,\n                  receiver_phone: UpdateParcelPage_form.receiver_phone\n                };\n                utils_fetchAPI("/parcels/".concat(UpdateParcelPage_form.id, "/destination"), {\n                  method: \'put\',\n                  body: body\n                }).then(function (res) {\n                  var data = res.data;\n\n                  if (res.success) {\n                    errorMessage.textContent = res.message;\n                    errorMessage.style.color = \'green\';\n                    var title = res.message || \'Parcel destination updated\';\n\n                    var _body = "\\n              <p class=\\"capitalize\\" style=\\"font-size: 1rem; line-height: 2rem;\\">\\n                <b>From</b>: ".concat(UpdateParcelPage_form.from_province, ", ").concat(UpdateParcelPage_form.from_district, "<br>\\n                <b>To</b>: ").concat(UpdateParcelPage_form.to_province, ", ").concat(UpdateParcelPage_form.to_district, "<br>\\n                <b>Receiver</b>: ").concat(UpdateParcelPage_form.receiver_names, "<br>\\n                <b>Address</b>: ").concat(UpdateParcelPage_form.receiver_address, "<br>\\n              </p>\\n            ");\n\n                    utils_model({\n                      title: title,\n                      body: _body\n                    });\n                  } else {\n                    utils_model({\n                      title: res.message\n                    });\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n                  console.log(err);\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                    errorMessage.style.color = \'red\';\n                  }\n                });\n              });\n              submitCancel.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n                utils_fetchAPI("/parcels/".concat(UpdateParcelPage_form.id, "/cancel"), {\n                  method: \'put\'\n                }).then(function (res) {\n                  var data = res.data;\n\n                  if (res.message) {\n                    errorMessage.textContent = res.message;\n                    UpdateParcelPage_form.status = \'Cancelled\';\n                    errorMessage.style.color = \'green\';\n                    var title = res.message || \'Parcel delivery cancelled\';\n                    var body = "\\n              <p class=\\"capitalize\\" style=\\"font-size: 1rem; line-height: 2rem;\\">\\n                <b>Status</b>: Cancelled<br>\\n                <b>From</b>: ".concat(UpdateParcelPage_form.from_province, ", ").concat(UpdateParcelPage_form.from_district, "<br>\\n                <b>To</b>: ").concat(UpdateParcelPage_form.to_province, ", ").concat(UpdateParcelPage_form.to_district, "<br>\\n                <b>Receiver</b>: ").concat(UpdateParcelPage_form.receiver_names, "<br>\\n                <b>Address</b>: ").concat(UpdateParcelPage_form.receiver_address, "<br>\\n              </p>\\n            ");\n                    utils_model({\n                      title: title,\n                      body: body\n                    });\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n                  console.log(err);\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                    errorMessage.style.color = \'red\';\n                  }\n                });\n              });\n\n              if (UpdateParcelPage_form.to_province) {\n                renderToProvince(UpdateParcelPage_form.to_province);\n              } // Callback function to handle email and password imput\n\n\n            case 30:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var UpdateParcelPage = (UpdateParcelPage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/admin/AdminParcelsPage.js\n\n\n\n\n\n\nvar AdminParcelsPage_parcels = {\n  data: [],\n  page: 1,\n  total: 0\n};\nvar AdminParcelsPage_counters = {\n  delivered: 0,\n  in_progress: 0\n};\nvar AdminParcelsPage_keywords = \'\';\nvar AdminParcelsPage_page;\nvar AdminParcelsPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var _store$user, user, params, parcelsUrl, parcelsData, result, searchForm, view;\n\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _store$user = store.user, user = _store$user === void 0 ? \'\' : _store$user;\n              params = utils_navigation.extractQuery();\n\n              if (!user.id) {\n                _context.next = 17;\n                break;\n              }\n\n              AdminParcelsPage_keywords = params.search || \'\';\n              AdminParcelsPage_page = params.page || 1;\n              parcelsUrl = "/parcels?page=".concat(AdminParcelsPage_page, "&search=").concat(AdminParcelsPage_keywords);\n              _context.next = 8;\n              return utils_fetchAPI(parcelsUrl);\n\n            case 8:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.t0 = AdminParcelsPage_parcels;\n\n            case 11:\n              parcelsData = _context.t0;\n              AdminParcelsPage_parcels = AdminParcelsPage_parcels.data ? parcelsData : AdminParcelsPage_parcels;\n              _context.next = 15;\n              return utils_fetchAPI("/parcels/counters");\n\n            case 15:\n              result = _context.sent;\n              AdminParcelsPage_counters = result.counters || AdminParcelsPage_counters;\n\n            case 17:\n              searchForm = "\\n      <form>\\n        <div class=\\"input-block is-row search\\">\\n          <input\\n            id=\\"search-input\\"\\n            type=\\"text\\" name=\\"search\\"\\n            placeholder=\\"Search for user\\"\\n            value=\\"".concat(AdminParcelsPage_keywords, "\\"\\n          >\\n          <i class=\\"fa fa-search icon-btn\\"></i>\\n        </div>\\n      </form>");\n              _context.t1 = "\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-3\\">\\n            ";\n              _context.next = 21;\n              return leftSideBar.render();\n\n            case 21:\n              _context.t2 = _context.sent;\n              _context.t3 = AdminParcelsPage_counters.delivered + AdminParcelsPage_counters.in_progress || 0;\n              _context.t4 = AdminParcelsPage_counters.delivered || 0;\n              _context.t5 = AdminParcelsPage_counters.in_progress || 0;\n              _context.t6 = AdminParcelsPage_keywords;\n              _context.t7 = AdminParcelsPage_parcels.data.map(function (val, index) {\n                return "\\n                      <tr class=\\"capitalize\\">\\n                        <td>".concat(index + 1, "</td>\\n                        <td>").concat(val.first_name, " ").concat(val.last_name, ", <span class=\\"lowercase\\">").concat(val.email, "</span></td>\\n                        <td>").concat(val.from_province, ", ").concat(val.from_district, "</td>\\n                        <td>").concat(val.to_province, ", ").concat(val.to_district, "</td>\\n                        <td>").concat(val.receiver_names, "</td>\\n                        <td>").concat(val.created_at.substring(0, 10), "</td>\\n                        <td>").concat(val.status, "</td>\\n                        <td class=\\"align-right\\">\\n                          <a href=\\"/#/admin_parcels/").concat(val.id, "\\" class=\\"btn-edit\\">\\n                            <i class=\\"fa fa-edit\\"></i>\\n                          </a>\\n                        </td>\\n                      </tr>\\n                      ");\n              }).join(\'\\n \');\n              _context.t8 = AdminParcelsPage_parcels.page > 1 ? "href=\\"/#/admin_parcels?page=".concat(AdminParcelsPage_parcels.page - 1, "\\"") : \'\';\n              _context.t9 = AdminParcelsPage_parcels.page === 1 ? \'disabled\' : \'\';\n              _context.t10 = AdminParcelsPage_parcels.page <= AdminParcelsPage_parcels.totalPage ? "href=\\"/#/admin_parcels?page=".concat(AdminParcelsPage_parcels.page + 1, "\\"") : \'\';\n              _context.t11 = AdminParcelsPage_parcels.page >= AdminParcelsPage_parcels.totalPage ? \'disabled\' : \'\';\n              view = _context.t1.concat.call(_context.t1, _context.t2, "\\n          </div>\\n          <div class=\\"col-9\\">\\n            <div class=\\"row mt-5\\">\\n              <div class=\\"col-4\\">\\n                <div class=\\"box profile-counter\\">\\n                  <p>Total Order: <strong>").concat(_context.t3, "</strong></p>\\n                </div>\\n              </div>\\n              <div class=\\"col-4\\">\\n                <div class=\\"box profile-counter\\">\\n                  <p><i class=\\"fa fa-tick\\"></i> Delivered: <strong>").concat(_context.t4, "</strong></p>\\n                </div>\\n              </div>\\n              <div class=\\"col-4\\">\\n                <div class=\\"box profile-counter\\">\\n                  <p><i class=\\"fa fa-truck\\"></i> In Process: <strong>").concat(_context.t5, "</strong></p>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\"row\\">\\n            <div class=\\"col-12\\">\\n              <h3 class=\\"title-1 align-center\\">Parcels</h3>\\n              <form>\\n                <div class=\\"input-block is-row search\\">\\n                  <input\\n                    id=\\"search-input\\"\\n                    type=\\"text\\" name=\\"search\\"\\n                    placeholder=\\"Search for parcels\\"\\n                    value=\\"").concat(_context.t6, "\\"\\n                  >\\n                <i class=\\"fa fa-search icon-btn\\"></i>\\n                </div>\\n              </form>\\n              <table class=\\"table\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\"20\\" >No.</th>\\n                    <th>User</th>\\n                    <th>From</th>\\n                    <th>To</th>\\n                    <th width=\\"140\\">Receiver</th>\\n                    <th width=\\"110\\">Date</th>\\n                    <th width=\\"100\\">Status</th>\\n                    <th width=\\"100\\">Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  ").concat(_context.t7, "\\n                </tbody>\\n              </table>\\n              <nav class=\\"pagination\\">\\n                <a\\n                  ").concat(_context.t8, "\\n                  ").concat(_context.t9, "\\n                >\\n                  <i class=\\"fa fa-angle-left\\"></i> Previous\\n                </a>\\n                <a\\n                  ").concat(_context.t10, "\\n                  ").concat(_context.t11, "\\n                >\\n                  Next <i class=\\"fa fa-angle-right\\"></i>\\n                </a>\\n              </nav>\\n            </div>\\n          </div>\\n        </div>\\n      </div>");\n              return _context.abrupt("return", view);\n\n            case 33:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var searchInput;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              searchInput = document.querySelector(\'#search-input\');\n              searchInput.addEventListener(\'keypress\', function (e) {\n                if (e.keyCode === 13) {\n                  e.preventDefault();\n\n                  var _nav$extractQuery = utils_navigation.extractQuery(),\n                      _nav$extractQuery$pag = _nav$extractQuery.page,\n                      _page = _nav$extractQuery$pag === void 0 ? 1 : _nav$extractQuery$pag;\n\n                  location.href = "/#/admin_parcels?page=".concat(_page, "&search=").concat(AdminParcelsPage_keywords);\n                }\n              });\n              searchInput.addEventListener(\'keyup\', function (e) {\n                if (e.keyCode === 13) {\n                  e.preventDefault();\n                }\n\n                AdminParcelsPage_keywords = e.target.value;\n              });\n\n            case 3:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var AdminParcelsPage = (AdminParcelsPage_Page);\n// CONCATENATED MODULE: ./ui/src/pages/admin/AdminParcelPage.js\n\n\n\n\n\n\n\n\n\nvar AdminParcelPage_form = {\n  from_province: \'\',\n  from_district: \'\',\n  to_district: \'\',\n  to_province: \'\',\n  receiver_names: \'\',\n  receiver_phone: \'\',\n  receiver_address: \'\',\n  weight: \'\'\n};\nvar parcelStatus;\nvar parcelPresentLocation;\nvar AdminParcelPage_Page = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var id, view;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              id = utils_navigation.extractRequestURL()[1];\n              _context.next = 3;\n              return utils_fetchAPI("/parcels/".concat(id)).then(function (res) {\n                AdminParcelPage_form = res.data;\n                parcelStatus = res.data.status;\n                parcelPresentLocation = res.data.present_location;\n              });\n\n            case 3:\n              _context.t1 = "\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-3\\">\\n            ";\n              _context.next = 6;\n              return leftSideBar.render();\n\n            case 6:\n              _context.t2 = _context.sent;\n              _context.t0 = _context.t1.concat.call(_context.t1, _context.t2, "\\n          </div>\\n          <div class=\\"col-9\\">\\n            ");\n              _context.next = 10;\n              return googleMap.render();\n\n            case 10:\n              _context.t3 = _context.sent;\n              _context.t4 = AdminParcelPage_form.from_district;\n              _context.t5 = AdminParcelPage_form.to_district;\n              _context.t6 = AdminParcelPage_form.weight;\n              _context.t7 = AdminParcelPage_form.price.toLocaleString();\n              _context.t8 = AdminParcelPage_form.status === \'Waiting Pickup\' ? \'selected\' : \'\';\n              _context.t9 = AdminParcelPage_form.status === \'Pick Up\' ? \'selected\' : \'\';\n              _context.t10 = AdminParcelPage_form.status === \'In Transit\' ? \'selected\' : \'\';\n              _context.t11 = AdminParcelPage_form.status === \'Delivered\' ? \'selected\' : \'\';\n              _context.t12 = AdminParcelPage_form.present_location;\n              _context.t13 = AdminParcelPage_form.from_province;\n              _context.t14 = AdminParcelPage_form.from_district;\n              _context.t15 = AdminParcelPage_form.to_province === \'eastern\' ? \'selected\' : \'\';\n              _context.t16 = AdminParcelPage_form.to_province === \'kigali\' ? \'selected\' : \'\';\n              _context.t17 = AdminParcelPage_form.to_province === \'northern\' ? \'selected\' : \'\';\n              _context.t18 = AdminParcelPage_form.to_province === \'southern\' ? \'selected\' : \'\';\n              _context.t19 = AdminParcelPage_form.to_district;\n              _context.t20 = AdminParcelPage_form.weight;\n              _context.t21 = AdminParcelPage_form.receiver_phone;\n              _context.t22 = AdminParcelPage_form.receiver_names;\n              view = _context.t0.concat.call(_context.t0, _context.t3, "\\n            <div class=\\"box order-container\\">\\n              <h2 class=\\"title-1 align-center\\">Parcel\'s details</h3>\\n              <div class=\\"quote-result\\">\\n                <p>From <strong class=\\"capitalize\\">").concat(_context.t4, "</strong> to \\n                  <strong class=\\"capitalize\\">").concat(_context.t5, "</strong>, a parcel of \\n                  <strong class=\\"capitalize\\">").concat(_context.t6, " KG</strong class=\\"capitalize\\"> \\n                  costs <strong>").concat(_context.t7, " RWF</strong>\\n                </p>\\n              </div>\\n              <div class=\\"form-error error-message\\"></div>\\n              <form action=\\"#\\">\\n                <div class=\\"row content-center\\">\\n                  <div class=\\"col-6 align-center\\">\\n                    <div class=\\"checkbox-block content-center\\">\\n                      <label for=\\"cancelled\\">Cancelled</label>\\n                      <input class=\\"checkbox\\" type=\\"checkbox\\" name=\\"cancelled\\" disabled /> \\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\"row content-center\\">\\n                  <div class=\\"col-6 align-center\\">\\n                    <label for=\\"status\\">Order Status</label>\\n                    <div class=\\"is-row\\">\\n                      <span class=\\"custom-dropdown flex-1\\">\\n                        <select id=\\"status\\" name=\\"status\\">\\n                          <option \\n                            ").concat(_context.t8, "\\n                            value=\\"Waiting Pickup\\"\\n                          >Waiting Pickup</option>\\n                          <option\\n                            ").concat(_context.t9, "\\n                            value=\\"Pick Up\\"\\n                          >Pick Up</option>  \\n                          <option\\n                            ").concat(_context.t10, "\\n                            value=\\"In Transit\\"\\n                          >In Transit</option>\\n                          <option\\n                            ").concat(_context.t11, "\\n                            value=\\"Delivered\\"\\n                          >Delivered</option>\\n                        </select>\\n                      </span>\\n                      <button\\n                        id=\\"submit-status\\"\\n                        class=\\"btn primary\\"\\n                        disabled\\n                      >\\n                        Update\\n                      </button>\\n                    </div>\\n                  </div>\\n                  <div class=\\"col-6 align-center\\">\\n                    <label for=\\"orderStatus\\">Present Location</label>\\n                    <div class=\\"is-row\\">\\n                      <input\\n                        type=\\"text\\"\\n                        name=\\"present_location\\"\\n                        id=\\"present_location\\"\\n                        placeholder=\\"Present Location\\"\\n                        value=\\"").concat(_context.t12, "\\"\\n                      >\\n                      <button\\n                        id=\\"submit-location\\"\\n                        class=\\"btn primary\\"\\n                        disabled\\n                      >\\n                        Update\\n                      </button>\\n                    </div>\\n                    <div class=\\"form-error receiver_names\\"></div> \\n                  </div>\\n                </div>\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"from_province\\">From</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select\\n                        class=\\"capitalize\\"\\n                        id=\\"from_province\\"\\n                        name=\\"from_province\\n                        required\\n                        placeholder=\\"From Province\\"\\n                        disabled\\n                      >\\n                        <option value=\\"\\">From: ").concat(_context.t13, " Province</option> \\n                        <option value=\\"eastern\\">Eastern Province</option>\\n                        <option value=\\"kigali\\">Kigali</option>  \\n                        <option value=\\"northern\\">Northen Province</option>\\n                        <option value=\\"southern\\">Southern Province</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error from_province\\"></div>\\n                    \\n                    <span class=\\"custom-dropdown\\">\\n                      <select\\n                        class=\\"capitalize\\"\\n                        id=\\"from_district\\"\\n                        name=\\"from_district\\"\\n                        required\\n                        disabled\\n                      >    \\n                        <option value=\\"\\">From: ").concat(_context.t14, " District</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error from_district\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <label for=\\"to_province\\">To</label>\\n                    <span class=\\"custom-dropdown\\">\\n                      <select\\n                        id=\\"to_province\\"\\n                        name=\\"to_province\\"\\n                        required\\n                        value=\\"southern\\"\\n                        disabled\\n                      >\\n                        <option value=\\"\\">Province - Destination</option> \\n                        <option ").concat(_context.t15, " value=\\"eastern\\">\\n                          Eastern Province\\n                        </option>\\n                        <option ").concat(_context.t16, " value=\\"kigali\\">\\n                          Kigali\\n                        </option>  \\n                        <option ").concat(_context.t17, " value=\\"northern\\">\\n                          Northen Province\\n                        </option>\\n                        <option ").concat(_context.t18, " value=\\"southern\\">\\n                          Southern Province\\n                        </option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error to_province\\"></div>\\n                    \\n                    <span class=\\"custom-dropdown\\">\\n                      <select\\n                        class=\\"capitalize\\"\\n                        id=\\"to_district\\"\\n                        name=\\"to_district\\"\\n                        required\\n                        disabled\\n                      >    \\n                        <option value=\\"\\">").concat(_context.t19, "</option>\\n                      </select>\\n                    </span>\\n                    <div class=\\"form-error to_district\\"></div>\\n                  </div>\\n                </div>\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6\\">\\n                    <input\\n                      type=\\"number\\"\\n                      name=\\"weight\\"\\n                      id=\\"weight\\"\\n                      placeholder=\\"Weight\\"\\n                      required\\n                      disabled\\n                      value=\\"").concat(_context.t20, "\\"\\n                    >\\n                    <div class=\\"form-error weight\\"></div>\\n                  </div>\\n                  <div class=\\"col-6\\">\\n                    <input\\n                      type=\\"number\\"\\n                      name=\\"phone\\"\\n                      id=\\"receiver_phone\\"\\n                      placeholder=\\"Phone Number\\"\\n                      required\\n                      value=\\"").concat(_context.t21, "\\"\\n                      disabled\\n                    >\\n                    <div class=\\"form-error receiver_phone\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-6\\">\\n                    <input\\n                      type=\\"text\\"\\n                      name=\\"receiver_names\\"\\n                      id=\\"receiver_names\\"\\n                      placeholder=\\"Receiver\'s Names\\"\\n                      required\\n                      value=\\"").concat(_context.t22, "\\"\\n                    >\\n                    <div class=\\"form-error receiver_names\\"></div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\"row\\">\\n                  <div class=\\"col-12\\">\\n                    <textarea\\n                      placeholder=\\"Enter full address\\"\\n                      rows=\\"5\\"\\n                      name=\\"receiver_address\\"\\n                      id=\\"receiver_address\\"\\n                      maxlength=\\"200\\"\\n                      required\\n                      ></textarea>\\n                    <div class=\\"form-error receiver_address\\"></div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    ");\n              return _context.abrupt("return", view);\n\n            case 32:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var pricePerKg, formKeys, fromProvince, fromDistrict, toProvince, toDistrict, status, presentLocation, receiverNames, receiverPhone, weight, receiverAddress, quoteResult, submitLocation, submitStatus, errorMessage, loading, inputHandler, renderDetails, validateInputs, resetInputs, renderToProvince;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              renderToProvince = function _ref5() {\n                var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'\';\n                var province = value.toLocaleLowerCase() || \'\';\n\n                if (provinces[province]) {\n                  AdminParcelPage_form.to_province = province;\n                  var districts = provinces[province].districts || [];\n                  toDistrict.options.length = 0; //Reset district option to 0\n\n                  toDistrict.options[0] = new Option(\'Select District\'); // Add the first option to district\n                  // Add all district from the selected province\n\n                  for (var index in districts) {\n                    var selected = index === AdminParcelPage_form.to_district;\n                    toDistrict.add(new Option(districts[index].name, index, \'\', selected));\n                  }\n\n                  ;\n                }\n              };\n\n              resetInputs = function _ref4() {\n                var keys = Object.keys(AdminParcelPage_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!AdminParcelPage_form[key] && AdminParcelPage_form[key] !== 0) {\n                    AdminParcelPage_form[key] = \'\';\n                    var tagElement = document.querySelector("#".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'\'; // tagElement.style.color = \'red\'\n                    }\n                  }\n                });\n                return hasError;\n              };\n\n              validateInputs = function _ref3() {\n                var keys = Object.keys(AdminParcelPage_form);\n                var hasError = false;\n                keys.forEach(function (key) {\n                  if (!AdminParcelPage_form[key] && AdminParcelPage_form[key] !== 0) {\n                    var tagElement = document.querySelector(".form-error.".concat(key));\n\n                    if (tagElement) {\n                      tagElement.textContent = \'Required\';\n                      tagElement.style.color = \'red\';\n                      hasError = true;\n                    }\n                  } // Set all null field to an empty string\n\n\n                  if (AdminParcelPage_form[key] === null) {\n                    AdminParcelPage_form[key] = \'\';\n                  }\n                });\n                return hasError;\n              };\n\n              renderDetails = function _ref2() {\n                var price = utils_getPrice(AdminParcelPage_form.weight);\n                AdminParcelPage_form.price = price;\n                quoteResult.innerHTML = "\\n      <p>\\n        From <strong>".concat(AdminParcelPage_form.from_district || \'-\', "</strong> \\n        to <strong class=\\"capitalize\\">").concat(AdminParcelPage_form.to_district || \'-\', "</strong>, a parcel of \\n        <strong class=\\"capitalize\\">").concat(AdminParcelPage_form.weight || \'-\', " Kg</strong> costs <strong>\\n        ").concat(price ? price.toLocaleString() : \'-\', " RWF</strong>\\n      </p>");\n                googleMap.after_render(AdminParcelPage_form.from_district, AdminParcelPage_form.present_location || AdminParcelPage_form.to_district);\n              };\n\n              inputHandler = function _ref(e) {\n                var _e$target = e.target,\n                    id = _e$target.id,\n                    value = _e$target.value;\n                AdminParcelPage_form[id] = value; // toggle status disabled attribute\n\n                if (id === \'status\') {\n                  parcelStatus === value ? submitStatus.setAttribute(\'disabled\', true) : submitStatus.removeAttribute(\'disabled\');\n                } // toggle pressent_location disabled attribute\n\n\n                if (id === \'present_location\') {\n                  parcelPresentLocation === value ? submitLocation.setAttribute(\'disabled\', true) : submitLocation.removeAttribute(\'disabled\');\n                }\n\n                renderDetails();\n              };\n\n              pricePerKg = 1000;\n              googleMap.after_render(AdminParcelPage_form.from_district, AdminParcelPage_form.present_location || AdminParcelPage_form.to_district);\n              formKeys = Object.keys(AdminParcelPage_form); // From province and distrinct\n\n              fromProvince = document.querySelector(\'#from_province\');\n              fromDistrict = document.querySelector(\'#from_district\'); // To province and distrinct\n\n              toProvince = document.querySelector(\'#to_province\');\n              toDistrict = document.querySelector(\'#to_district\');\n              status = document.querySelector(\'#status\');\n              presentLocation = document.querySelector(\'#present_location\');\n              receiverNames = document.querySelector(\'#receiver_names\');\n              receiverPhone = document.querySelector(\'#receiver_phone\');\n              weight = document.querySelector(\'#weight\');\n              receiverAddress = document.querySelector(\'#receiver_address\');\n              quoteResult = document.querySelector(\'.quote-result\');\n              submitLocation = document.querySelector(\'#submit-location\');\n              submitStatus = document.querySelector(\'#submit-status\');\n              errorMessage = document.querySelector(\'.form-error.error-message\');\n              loading = document.querySelector(\'.loading\');\n              status.addEventListener(\'input\', inputHandler);\n              presentLocation.addEventListener(\'input\', inputHandler);\n              receiverAddress.addEventListener(\'input\', inputHandler);\n              receiverNames.addEventListener(\'input\', inputHandler);\n              receiverPhone.addEventListener(\'input\', inputHandler);\n              weight.addEventListener(\'input\', inputHandler);\n              toProvince.addEventListener(\'change\', function (e) {\n                var value = e.target.value;\n\n                if (value) {\n                  renderToProvince(value);\n                }\n              });\n              toDistrict.addEventListener(\'change\', function (e) {\n                AdminParcelPage_form.to_district = e.target.value;\n                renderDetails();\n              });\n              submitStatus.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n\n                if (validateInputs()) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                var body = {\n                  status: AdminParcelPage_form.status\n                };\n                utils_fetchAPI("/parcels/".concat(AdminParcelPage_form.id, "/status"), {\n                  method: \'put\',\n                  body: body\n                }).then(function (res) {\n                  var data = res.data;\n\n                  if (res.message) {\n                    parcelPresentLocation = AdminParcelPage_form.present_location;\n                    parcelStatus = AdminParcelPage_form.status;\n                    status.setAttribute(\'disabled\', true);\n                    presentLocation.setAttribute(\'disabled\', true);\n                    errorMessage.textContent = res.message;\n                    errorMessage.style.color = \'green\';\n                    var title = res.message || \'Parcel status updated\';\n\n                    var _body = "\\n              <p class=\\"capitalize\\" style=\\"font-size: 1rem; line-height: 2rem;\\">\\n                <b>Status</b>: ".concat(AdminParcelPage_form.status, "<br>\\n                <b>Current Location</b>: ").concat(AdminParcelPage_form.present_location, "<br>\\n                <b>From</b>: ").concat(AdminParcelPage_form.from_province, ", ").concat(AdminParcelPage_form.from_district, "<br>\\n                <b>To</b>: ").concat(AdminParcelPage_form.to_province, ", ").concat(AdminParcelPage_form.to_district, "<br>\\n                <b>Receiver</b>: ").concat(AdminParcelPage_form.receiver_names, "<br>\\n                <b>Address</b>: ").concat(AdminParcelPage_form.receiver_address, "<br>\\n              </p>\\n            ");\n\n                    utils_model({\n                      title: title,\n                      body: _body\n                    });\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n                  console.log(err);\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                    errorMessage.style.color = \'red\';\n                  }\n                });\n              });\n              submitLocation.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                loading.classList.add(\'active\');\n\n                if (validateInputs()) {\n                  setTimeout(function () {\n                    return loading.classList.remove(\'active\');\n                  }, 2000);\n                  return;\n                }\n\n                var body = {\n                  present_location: AdminParcelPage_form.present_location\n                };\n                utils_fetchAPI("/parcels/".concat(AdminParcelPage_form.id, "/presentLocation"), {\n                  method: \'put\',\n                  body: body\n                }).then(function (res) {\n                  var data = res.data;\n\n                  if (res.message) {\n                    parcelPresentLocation = AdminParcelPage_form.present_location;\n                    parcelStatus = AdminParcelPage_form.status;\n                    status.setAttribute(\'disabled\', true);\n                    presentLocation.setAttribute(\'disabled\', true);\n                    errorMessage.textContent = res.message;\n                    errorMessage.style.color = \'green\';\n                    var title = res.message || \'Parcel location updated\';\n\n                    var _body2 = "\\n              <p class=\\"capitalize\\" style=\\"font-size: 1rem; line-height: 2rem;\\">\\n                <b>Status</b>: ".concat(AdminParcelPage_form.status, "<br>\\n                <b>Current Location</b>: ").concat(AdminParcelPage_form.present_location, "<br>\\n                <b>From</b>: ").concat(AdminParcelPage_form.from_province, ", ").concat(AdminParcelPage_form.from_district, "<br>\\n                <b>To</b>: ").concat(AdminParcelPage_form.to_province, ", ").concat(AdminParcelPage_form.to_district, "<br>\\n                <b>Receiver</b>: ").concat(AdminParcelPage_form.receiver_names, "<br>\\n                <b>Address</b>: ").concat(AdminParcelPage_form.receiver_address, "<br>\\n              </p>\\n            ");\n\n                    utils_model({\n                      title: title,\n                      body: _body2\n                    });\n                  } // Wait for 2 seconds to smooth the spinner\n\n\n                  setTimeout(function () {\n                    loading.classList.remove(\'active\');\n                  }, 2000);\n                }).catch(function (err) {\n                  loading.classList.remove(\'active\');\n                  console.log(err);\n\n                  if (err.message) {\n                    errorMessage.textContent = err.message;\n                    errorMessage.style.color = \'red\';\n                  }\n                });\n              });\n\n              if (AdminParcelPage_form.to_province) {\n                renderToProvince(AdminParcelPage_form.to_province);\n              } // Callback function to handle email and password imput\n\n\n            case 34:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var AdminParcelPage = (AdminParcelPage_Page);\n// CONCATENATED MODULE: ./ui/src/components/topHeader.js\n\n\n\nvar topNav = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      var user, links, view;\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = store.user;\n              links = [{\n                link: \'/#/\',\n                text: \'Home\',\n                users: []\n              }, {\n                link: \'/#/quote\',\n                text: \'Get Quote\',\n                users: [],\n                hide: true\n              }, {\n                link: \'/#/create_parcel\',\n                text: \'Add parcel\',\n                auth: true,\n                users: [\'user\', \'admin\']\n              }, {\n                link: \'/#/admin_parcels\',\n                text: \'Parcels\',\n                auth: true,\n                users: [\'admin\']\n              }, {\n                link: \'/#/my_parcels\',\n                text: \'My Parcels\',\n                auth: true,\n                users: [\'user\', \'admin\']\n              }, {\n                link: \'/#/signup\',\n                text: \'Signup\',\n                hide: true\n              }, {\n                link: \'/#/login\',\n                text: \'Login\',\n                hide: true\n              }, {\n                link: "/#/profile/".concat(user.id ? user.id : \':id\'),\n                text: \'<i class="fa fa-user mr-5"></i> My Account\',\n                auth: true\n              }, {\n                link: \'#\',\n                text: \'<i class="fa fa-sign-out mr-5"></i> Logout\',\n                auth: true,\n                attr: \'onclick="logout()"\',\n                classes: \'logout\'\n              }];\n              view = "\\n      <div class=\\"meu-header\\">\\n        <div class=\\"container\\">\\n          <div class=\\"col-8\\">\\n            <ul class=\\"plain-list\\">\\n              <li><a href=\\"#\\"><i class=\\"fa fa-phone\\"></i> (+250)-000-000-000</a></li>\\n              <li><a href=\\"#\\"><i class=\\"fa fa-envelope\\"></i> info@sendit.com</a></li>\\n            </ul>\\n          </div>\\n          <div class=\\"col-4 align-right\\">\\n            <ul class=\\"plain-list\\">\\n              <li><a href=\\"#\\"><i class=\\"fa fa-facebook\\"></i></a></li>\\n              <li><a href=\\"#\\"><i class=\\"fa fa-twitter\\"></i></a></li>\\n              <li><a href=\\"#\\"><i class=\\"fa fa-youtube\\"></i></a></li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\"container\\">\\n        <a class=\\"brand\\" href=\\"index.html\\">\\n          <img class=\\"brand__img\\" src=\\"./images/logo.png\\" alt=\\"logo\\">\\n        </a>\\n        <div class=\\"toggle-menu\\">\\n          <div class=\\"hamburger\\"></div>\\n        </div>\\n        <nav id=\\"menu-nav\\" class=\\"nav pull-right\\">\\n          <ul>\\n            ".concat(links.map(function (el) {\n                if (el.auth ? store.auth && (el.users ? el.users.indexOf(user.user_type) !== -1 : true) && !el.hide : !store.auth || !el.hide) {\n                  return "\\n                  <li class=\\"nav-item\\">\\n                    <a\\n                      ".concat(el.attr ? el.attr : \'kk\', " \\n                      href=\\"").concat(el.link, "\\" ").concat(el.classes ? "class=\\"".concat(el.classes, "\\"") : \'\', "\\n                    >\\n                      ").concat(el.text, "\\n                    </a>\\n                  </li>\\n                ");\n                }\n              }).join(\'\\n \'), "\\n          </ul>\\n        </nav>\\n      </div>\\n  ");\n              return _context.abrupt("return", view);\n\n            case 4:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      var toggleMenu, navLinks;\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              toggleMenu = document.querySelector(\'.toggle-menu\');\n              navLinks = document.querySelectorAll(\'.nav-item>a\');\n              /*\n                Add eventListerner to all menu links in order to toggle\n                active one\n               */\n\n              navLinks.forEach(function (el) {\n                // Assure to make active the current page when loading\n                if (el.href === window.location.href) {\n                  el.classList.add(\'active\');\n                } // Adds click event to all menu links\n\n\n                el.addEventListener(\'click\', function (e) {\n                  navLinks.forEach(function (nav) {\n                    return nav.classList.remove(\'active\');\n                  });\n                  e.target.classList.add(\'active\');\n                });\n              });\n              toggleMenu.addEventListener(\'click\', function (e) {\n                e.preventDefault();\n                var hamburger = document.querySelector(\'.hamburger\');\n                var menuNav = document.querySelector(\'#menu-nav\');\n                hamburger.classList.toggle(\'active\');\n                menuNav.classList.toggle(\'active\');\n              }); // Add the logout function to the global object window\n\n              window.logout = function (e) {\n                store.logout();\n                location.href = \'/\';\n              };\n\n            case 5:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var topHeader = (topNav);\n// CONCATENATED MODULE: ./ui/src/components/bottomFooter.js\n\n\nvar footer = {\n  render: function () {\n    var _render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee() {\n      return regenerator_default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt("return", "\\n    <div class=\\"footer-container\\">\\n      <div class=\\"container\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-3\\">\\n            <img class=\\"footer-logo\\" src=\\"./images/logo.png\\" alt=\\"logo\\">\\n          </div>\\n          <div class=\\"col-3\\">\\n            <h3 class=\\"footer-title\\">Site Map</h3>\\n            <ul class=\\"footer-list\\">\\n              <li><a href=\\"/\\">Home</a></li>\\n              <li><a href=\\"/#/quote\\">Get A Quote</a></li>\\n            </ul>\\n          </div>\\n          <div class=\\"col-3\\">\\n            <h3 class=\\"footer-title\\">Partners</h3>\\n            <ul class=\\"footer-list\\">\\n              <li><a href=\\"#\\">DHL</a></li>\\n              <li><a href=\\"#\\">Postal</a></li>\\n            </ul>\\n          </div>\\n          <div class=\\"col-3\\">\\n            <h3 class=\\"footer-title\\">Social</h3>\\n            <ul class=\\"footer-list\\">\\n              <li>\\n                <a href=\\"#\\"><i class=\\"fa fa-facebook is-white\\"></i> Facebook</a>\\n              </li>\\n              <li>\\n                <a href=\\"#\\"><i class=\\"fa fa-twitter is-white\\"></i> Twitter</a>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  ");\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function render() {\n      return _render.apply(this, arguments);\n    }\n\n    return render;\n  }(),\n  after_render: function () {\n    var _after_render = asyncToGenerator_default()(\n    /*#__PURE__*/\n    regenerator_default.a.mark(function _callee2() {\n      return regenerator_default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function after_render() {\n      return _after_render.apply(this, arguments);\n    }\n\n    return after_render;\n  }()\n};\n/* harmony default export */ var bottomFooter = (footer);\n// CONCATENATED MODULE: ./ui/src/app.js\n\n\n\n/*\n * SPA structure inspired by Bryan Manuele (Fermi Dirak)\n * https://medium.com/@bryanmanuele/how-i-implemented-my-own-spa-routing-system-in-vanilla-js-49942e3c4573\n */\n// \'use strict\';\n// Web Pages\n\n\n\n\n\n\n\n\n\n\n\n // Components\n\n\n\n\nvar header = document.getElementById(\'top-menu\');\nvar mainContent = document.getElementById(\'main-content\');\nvar app_footer = document.getElementById(\'footer\');\nvar loadingPage = document.querySelector(\'.loading\');\n // Pages routes\n\nvar routes = {\n  \'/\': {\n    name: \'Home\',\n    page: HomePage\n  },\n  \'/quote\': {\n    name: \'Get Quote\',\n    page: QuotePage\n  },\n  \'/login\': {\n    name: \'Login\',\n    page: LoginPage,\n    hide: true\n  },\n  \'/signup\': {\n    name: \'Signup\',\n    page: SignupPage,\n    hide: true\n  },\n  \'/my_parcels\': {\n    name: \'My Parcels\',\n    page: MyParcelsPage,\n    auth: true\n  },\n  \'/create_parcel\': {\n    name: \'Create a parcel\',\n    page: CreateParcelPage,\n    auth: true\n  },\n  \'/parcels/:id\': {\n    name: \'Update parcel\',\n    page: UpdateParcelPage,\n    auth: true\n  },\n  \'/profile/:id\': {\n    name: \'Profile\',\n    page: ProfilePage,\n    auth: true\n  },\n  \'/profile/:id/confirm_email/:id\': {\n    name: \'Confirm Email\',\n    page: ConfirmEmailPage\n  },\n  \'/admin_parcels\': {\n    name: \'Admin Parcels\',\n    page: AdminParcelsPage,\n    auth: true\n  },\n  \'/admin_parcels/:id\': {\n    name: \'Admin Parcels\',\n    page: AdminParcelPage,\n    auth: true\n  }\n}; // The router code. Takes a URL, checks against the list of supported routes and then renders the corresponding content page.\n\nvar router =\n/*#__PURE__*/\nfunction () {\n  var _ref = asyncToGenerator_default()(\n  /*#__PURE__*/\n  regenerator_default.a.mark(function _callee() {\n    var request, parsedURL, paramIndex, urls, url, page, menuLink;\n    return regenerator_default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            request = utils_navigation.extractRequestURL();\n            parsedURL = [];\n            paramIndex = 1;\n            request.forEach(function (el, index) {\n              var param = el;\n\n              if (param) {\n                if (param.match(/\\?.*/)) {\n                  param = param.replace(/\\?.*/g, \'\');\n                }\n\n                if (param) {\n                  if (index % 2 !== 0 && index != 0) {\n                    parsedURL.push(":id");\n                    paramIndex += 1;\n                  } else {\n                    parsedURL.push(param);\n                  }\n                }\n              }\n            }); // Get the page from our hash of supported routes.\n            // If the parsed URL is not in our list of supported routes, select the 404 page instead\n\n            urls = Object.keys(routes);\n            url = urls.find(function (route) {\n              var routeParams = route.split(\'/\');\n              routeParams.shift();\n              var requestParams = parsedURL;\n              var paramRegx = /:id/;\n\n              if (routeParams.length === requestParams.length) {\n                for (var i = 0; i < routeParams.length; i += 1) {\n                  if (routeParams[i] !== requestParams[i] && !paramRegx.test(routeParams[i])) {\n                    return false;\n                  }\n                }\n\n                return true;\n              }\n\n              return false;\n            });\n            if (parsedURL.length === 0) url = \'/\'; // Check if the route is protected\n\n            if (routes[url]) {\n              if (routes[url].auth || store.auth) {\n                if (routes[url].hide || !store.auth) {\n                  location.href = \'/#/\';\n                }\n              }\n            }\n\n            page = routes[url] ? routes[url].page : Error404Page;\n            loadingPage.classList.add(\'active\'); // Render the Header and footer of the page\n\n            _context.next = 12;\n            return topHeader.render();\n\n          case 12:\n            header.innerHTML = _context.sent;\n            _context.next = 15;\n            return topHeader.after_render();\n\n          case 15:\n            _context.next = 17;\n            return page.render();\n\n          case 17:\n            mainContent.innerHTML = _context.sent;\n            menuLink = document.querySelecter;\n            _context.next = 21;\n            return page.after_render();\n\n          case 21:\n            _context.next = 23;\n            return bottomFooter.render();\n\n          case 23:\n            app_footer.innerHTML = _context.sent;\n            _context.next = 26;\n            return bottomFooter.after_render();\n\n          case 26:\n            // Wait for a second to remove the loading spinner\n            setTimeout(function () {\n              loadingPage.classList.remove(\'active\');\n            }, 1000);\n\n          case 27:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function router() {\n    return _ref.apply(this, arguments);\n  };\n}(); // Listen on hash change:\n\n\nwindow.addEventListener(\'hashchange\', router); // Listen on page load:\n\nwindow.addEventListener(\'load\', router); // window.onpopstate = () => {\n//   mainContent.innerHTML = routes[window.location.pathname];\n// }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')}]);